module.exports=function(app,cassandra,mongodb,XLSX,fs,jsonxml,parser,XMLbuilder,xml2js,download,__dirname,sql,path,formidable,_,DataConnectivity,kafka,Producer,Consumer,socket,mqtt,soap,XMLHandler,xmlHandler,util,CircularJSON,WSDL,postgresqlDBManager){var analytics_client=new cassandra.Client({contactPoints:["192.168.4.186:9042"],queryOptions:{consistency:cassandra.types.consistencies.quorum},keyspace:"iarms360"}),queryOptions={consistency:cassandra.types.consistencies.quorum,prepare:!0},db;analytics_client.connect(function(e){e?console.log("ERROR : "+e):console.log("Successfully connected to the cassandra database")}),mongodb.MongoClient.connect("mongodb://192.168.4.49:27017/iARMS_CM_NodeApp",function(e,a){e&&console.log(e),db=a,console.log("Database connection ready")}),app.get("/viewer",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/Home/Layout5.html")}),app.get("/LoadIndex",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/EmsLineDiagram/Index.html")}),app.get("/Reporting",function(e,a){a.sendfile("./public/Analytics/Views/Reporting/Latest_Report_Index.html")}),app.get("/Reporting/Help",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/Reporting/Help.html")}),app.get("/Reporting/Report_Parameters",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/Reporting/Report_Parameters.html")}),app.get("/Reporting/DailyViewer",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/Reporting/DailyViewer.html")}),app.get("/Reporting/Viewer",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/Reporting/Viewer.html")}),app.get("/ViewReports",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/Home/Analytics_ViewReports.html")}),app.get("/TrendsView",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/CompareTrends/index.html")}),app.get("/ExceltoTableList",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/Home/_ExcelLayout.html")}),app.get("/OPCDataSource",function(e,o){analytics_client.execute('select id as "Id",datasource as "DataSource" from OPC_DATASOURCE',queryOptions,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a.rows)})}),app.get("/getOPCdata",function(e,o){try{if(!0===e.session.authenticated){var a='select id as "_id",servername  as "ServerName",serverdesc as "ServerDesc",primaryurl as "PrimaryURL",secondaryurl as "SecondaryURL",opcservername as "OPCServerName",isactive as "IsActive" from public."Analytics_M_OPC_ConfigTable";';console.log(a),postgresqlDBManager.PSQL_getdata(a,null,function(e,a){e?console.log(o,e.message,"Failed to get OPC data."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/getOPCdata"+e)}}),app.post("/getOPCdata",function(e,o){console.log(e.body[0]);try{if(!0===e.session.authenticated){var a=[e.body[0].IsActive,e.body[0].ServerName,e.body[0].PrimaryURL,e.body[0].SecondaryURL,e.body[0].ServerDesc,e.body[0].ServerName];postgresqlDBManager.PSQL_getdata('INSERT INTO public."Analytics_M_OPC_ConfigTable"(isactive, opcservername, primaryurl, secondaryurl, serverdesc, servername) VALUES ($1, $2, $3, $4, $5, $6);',a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/getOPCdata"+e)}}),app.put("/UpdateOpcdata/:id",function(e,o){try{if(!0===e.session.authenticated){var a='update public."Analytics_M_OPC_ConfigTable" set serverdesc=$1,primaryurl=$2,secondaryurl=$3,opcservername=$4,isactive=$5 where id=$6';console.log(a),console.log(e.body[0].ServerName+" "+e.body[0].Nameofserver);var n=[e.body[0].ServerDesc,e.body[0].PrimaryURL,e.body[0].SecondaryURL,e.body[0].Nameofserver,e.body[0].IsActive,e.body[0].OPCserverid];postgresqlDBManager.PSQL_getdata(a,n,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/UpdateOpcdata/:id"+e)}}),app.delete("/DeleteOpcdata/:id",function(e,o){try{if(!0===e.session.authenticated){var a=[e.params.id];postgresqlDBManager.PSQL_getdata('delete from public."Analytics_M_OPC_ConfigTable" where id=$1;',a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/UpdateOpcdata/:id"+e)}}),app.post("/SelectOpcdata/:id",function(e,o){try{if(!0===e.session.authenticated){var a=[e.params.id];postgresqlDBManager.PSQL_getdata('select * from public."Analytics_M_OPC_ConfigTable" where id=$1',a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/SelectOpcdata/:id"+e)}}),app.post("/getGroupdetails",function(e,o){try{if(!0===e.session.authenticated){e.body[0];console.log("OPCID:"+e.body[0].opcID);var a=[e.body[0].opcID];postgresqlDBManager.PSQL_getdata('select opcid as "OPCID",opcname as "OPCName",groupname as "GroupName",groupdesc as"GroupDesc",groupactive as "GroupActive",id as "_id" from  public."Analytics_M_OPC_Groupstable" where opcid =$1;',a,function(e,a){e?console.log(o,e.message,"Failed to get OPC data."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/getGroupdetails"+e)}}),app.post("/getGroupdata",function(e,o){try{if(!0===e.session.authenticated){var a=[e.body[0].GroupActive,e.body[0].GroupDesc,e.body[0].GroupName,e.body[0].OPCID,e.body[0].OPCName];postgresqlDBManager.PSQL_getdata('INSERT INTO public."Analytics_M_OPC_Groupstable"(groupactive, groupdesc, groupname, opcid, opcname)VALUES($1,$2,$3,$4,$5)',a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/getGroupdata"+e)}}),app.get("/getAllGroupdetails",function(e,o){try{if(!0===e.session.authenticated){postgresqlDBManager.PSQL_getdata('select opcid as "OPCID",opcname as "OPCName",groupname as "GroupName",groupdesc as"GroupDesc",groupactive as "GroupActive",id as "_id" from public."Analytics_M_OPC_Groupstable";',null,function(e,a){e?console.log(o,e.message,"Failed to get OPC data."):(console.log("SrikanthHHHH"),o.status(200).json(a))})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/getAllGroupdetails"+e)}}),app.put("/UpdateGrpdata/:id",function(e,o){try{if(!0===e.session.authenticated){var a='update public."Analytics_M_OPC_Groupstable" set groupname=$1,groupdesc=$2,groupactive=$3 where id=$4;';console.log(a),console.log(e.params.id+"    "+e.body[0].GroupName+e.body[0].GroupDesc+" "+e.body[0].GroupActive);var n=[e.body[0].GroupName,e.body[0].GroupDesc,e.body[0].GroupActive,e.params.id];postgresqlDBManager.PSQL_getdata(a,n,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/UpdateGrpdata/:id"+e)}}),app.delete("/DeleteGroupdata/:id",function(e,o){try{if(!0===e.session.authenticated){var a=[e.params.id];postgresqlDBManager.PSQL_getdata('delete from public."Analytics_M_OPC_Groupstable" where id=$1',a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/DeleteGroupdata/:id"+e)}}),app.post("/getTagdetails",function(e,o){try{if(!0===e.session.authenticated){var a=[e.body[0].opcID,e.body[0].grpID];postgresqlDBManager.PSQL_getdata('select id as "_id",groupid as "Grpid",groupname as "GrpName",opcid as "OPCID",opcname as "OPCName",maxvalue as "MaxValue",minvalue as "MinValue",pollfreq as "POLLFREQ",polltime as "POLLTIME",tagactive as "TAGACTIVE",tagarthimetic as "TAGARITHMETIC",tagtype as "TAGTYPE",tagdesc as "TAGDESC",tagalias as "TAGALIAS",tagname as "TAGNAME"   from public."Analytics_M_OPC_Tagsdata" where opcid=$1 and groupid=$2 ;',a,function(e,a){e?console.log(o,e.message,"Failed to get OPC data."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/getTagdetails"+e)}}),app.get("/getalltagdata",function(e,o){try{if(!0===e.session.authenticated){postgresqlDBManager.PSQL_getdata('select id as "_id",groupid as "GROUPID",groupname as "GrpName",opcid as "OPCID",opcname as "OPCName",maxvalue as "MaxValue",minvalue as "MinValue",pollfreq as "POLLFREQ",polltime as "POLLTIME",tagactive as "TAGACTIVE",tagarthimetic as "TAGARITHMETIC",tagtype as "TAGTYPE",tagdesc as "TAGDESC",tagalias as "TAGALIAS",tagname as "TAGNAME"   from public."Analytics_M_OPC_Tagsdata";',null,function(e,a){e?console.log(o,e.message,"Failed to get OPC data."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/getalltagdata"+e)}}),app.post("/gettagdata",function(e,o){try{if(!0===e.session.authenticated){var a=[e.body[0].GROUPID,e.body[0].GROUPNAME,e.body[0].MaxValue,e.body[0].MinValue,e.body[0].OPCID,e.body[0].OPCNAME,e.body[0].POLLFREQ,e.body[0].POLLTIME,e.body[0].TAGACTIVE,e.body[0].TAGALIAS,e.body[0].TAGARITHMETIC,e.body[0].TAGDESC,e.body[0].TAGNAME,e.body[0].TAGTYPE];postgresqlDBManager.PSQL_getdata('INSERT INTO public."Analytics_M_OPC_Tagsdata"(groupid, groupname, maxvalue, minvalue, opcid, opcname, pollfreq, polltime, tagactive, tagalias, tagarthimetic, tagdesc, tagname, tagtype)VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14);',a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/gettagdata"+e)}}),app.put("/UpdateTagdata/:id",function(e,o){try{if(!0===e.session.authenticated){var a='update public."Analytics_M_OPC_Tagsdata" set tagname=$1,tagalias=$2,tagtype=$3,tagdesc=$4,pollfreq=$5,tagarthimetic=$6,tagactive=$7,maxvalue=$8,minvalue=$9 where id=$10';console.log(a);var n=[e.body[0].TAGNAME,e.body[0].TAGALIAS,e.body[0].TAGTYPE,e.body[0].TAGDESC,e.body[0].POLLFREQ,e.body[0].TAGARITHMETIC,e.body[0].TAGACTIVE,e.body[0].MaxValue,e.body[0].MinValue,e.params.id];postgresqlDBManager.PSQL_getdata(a,n,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.send("updated")})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/UpdateTagdata/:id"+e)}}),app.delete("/DeleteTagdata/:id",function(e,o){try{if(!0===e.session.authenticated){var a=[e.params.id];postgresqlDBManager.PSQL_getdata('delete from public."Analytics_M_OPC_Tagsdata" where id=$1',a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/DeleteTagdata/:id"+e)}}),app.post("/XMLFile/MyFileUpload",function(e,n){try{if(!0===e.session.authenticated){var t=new formidable.IncomingForm;t.multiples=!0,t.uploadDir=path.join(__dirname,"/public/Analytics/uploadedxmlfiles");var s=t.uploadDir;t.parse(e,function(e,a,o){s=path.join(s,o.file.name),fs.existsSync(s)?n.send("File already Exists"):fs.rename(o.file.path,path.join(t.uploadDir,o.file.name),function(e){e?n.send(e.message):n.send(o.file.name)})})}else n.send({isauthenticated:!1})}catch(e){console.log("Error:\tXMLFile/MyFileUpload"+e)}}),app.post("/XMLFile/GetXMLFileIdData",function(n,t){try{if(!0===n.session.authenticated){var s,r,i,c,l,e=[n.body.EditData];postgresqlDBManager.PSQL_getdata('select * from public."Analytics_M_Connections" where id=$1',e,function(e,a){if(e)console.log(t,e.message,"Failed to Insert SqlServerdata."),t.send("Failed to select");else{console.log("Srikanth"),s=a[0].connectionname,r=a[0].connectiontype,console.log(s+"  "+r);var o=[n.body.EditData];postgresqlDBManager.PSQL_getdata('select * from public."DataConnectors_M_XMLConn" where connectionid=$1',o,function(e,a){if(e)console.log(t,e.message,"Failed to Insert SqlServerdata."),t.send("Failed to select");else{i=a[0].radiovalue,c=a[0].fromurl,l=a[0].uploadedfiles;var o={ConnectionName:s,ConnectionType:r,RadioValue:i,FromURL:c,UploadedFiles:l};t.json(o)}})}})}else t.send({isauthenticated:!1})}catch(e){console.log("Error:\tXMLFile/GetXMLFileIdData"+e)}}),app.get("/XMLFile/AutoFillDropDown",function(e,o){try{if(!0===e.session.authenticated){fs.readdir("./public/Analytics/uploadedxmlfiles",function(e,a){e?(console.log(o,e.message,"Failed to Load uploadedxmlfiles."),o.send("Failed to Load")):o.status(200).send(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\tXMLFile/AutoFillDropDown"+e)}}),app.post("/XMLFILE/GetXMLTableData",function(e,c){try{if(!0===e.session.authenticated){'public."DataConnectors_M_XMLConn" where connectionid=$1';var a=[e.body.SelectedId];postgresqlDBManager.PSQL_getdata('SELECT uploadedfiles as "UploadedFiles",radiovalue as "RadioValue",fromurl as "FromURL" FROM public."DataConnectors_M_XMLConn" where connectionid=$1',a,function(e,a){if(e)console.log(c,e.message,"Failed to Insert SqlServerdata."),c.send("Failed to select");else{console.log(a.rows);var o=a[0].RadioValue,n=a[0].FromURL,t=a[0].UploadedFiles;if("FromUrl"==o){console.log("URLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL");var s=n.toString(),r=s.lastIndexOf("/"),i=s.substring(r+1,s.length);path11=__dirname+"/public/Analytics/uploadedxmlfiles/"+i,fs.readFile(""+path11,"utf8",function(e,a){if(e)return console.log(e);var o,n,t,s=""+path11;o=s,t=fs.readFileSync(o,"ascii"),new xml2js.Parser({explicitRoot:!1,explicitChildren:!1}).parseString(t.substring(0,t.length),function(e,a){n=JSON.stringify(a),c.send(n)})})}else path11=__dirname+"/public/Analytics/uploadedxmlfiles/"+t,fs.readFile(""+path11,"utf8",function(e,a){if(e)return console.log(e);var o,n,t,s=""+path11;o=s,t=fs.readFileSync(o,"ascii"),new xml2js.Parser({explicitRoot:!1,explicitChildren:!1}).parseString(t.substring(0,t.length),function(e,a){n=JSON.stringify(a),c.send(n)})})}})}else c.send({isauthenticated:!1})}catch(e){console.log("Error:\tXMLFILE/GetXMLTableData"+e)}}),app.post("/XMLFile/RemoveConnection",function(n,t){try{!0===n.session.authenticated?postgresqlDBManager.PSQL_Connect(function(e,o,a){if(e)console.log(e.message);else{"connectionid=$1",postgresqlDBManager.PSQL_ExecuteQuery(o,'delete from public."DataConnectors_M_XMLConn" where connectionid=$1',[n.body.DeleteID],function(e,a){if(e)console.log(t,e.message,"Failed to delete data.");else{console.log("deleted!!!!!!!@@@@@@@@@@@@");"id=$1",postgresqlDBManager.PSQL_ExecuteQuery(o,'delete from public."Analytics_M_Connections" where id=$1',[n.body.DeleteID],function(e,a){e?console.log(t,e.message,"Failed to delete data."):t.status(200).json(a.rows)})}})}}):t.send({isauthenticated:!1})}catch(e){console.log("Error:\t/XMLFile/RemoveConnection"+e)}}),app.get("/XMLFile/GetXMLConnList",function(e,o){try{if(!0===e.session.authenticated){var a=["XML Connection",e.session.myemail];postgresqlDBManager.PSQL_getdata('SELECT id as "Id",connectionname as "ConnectionName"  FROM public."Analytics_M_Connections" where connectiontype=$1 and username=$2;',a,function(e,a){e?(console.log(o,e.message,"Failed to Insert SqlServerdata."),o.send("Failed to select")):o.json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/XMLFile/GetXMLConnList"+e)}}),app.post("/XMLFile/SaveXMLFileData",function(e,t){try{if(!0===e.session.authenticated){var s=JSON.parse(e.body.routinedata),r="";if("Save"==s[0].HiddenConId){if("FromUrl"==s[0].RadioValue){var a=""+s[0].FromUrl,o=(d=a.toString()).lastIndexOf("/"),n=d.substring(o+1,d.length);download(a,{directory:__dirname+"/public/Analytics/uploadedxmlfiles",filename:""+n},function(e){if(e)throw e})}var i=cassandra.types.TimeUuid.now();s[0].id=i;var c='INSERT INTO public."Analytics_M_Connections"(connectionname, connectiontype,username,"Role")VALUES';c+="($1,$2,$3,$4) RETURNING id";var l=[s[0].ConnectionName,s[0].ConnType,e.session.myemail,e.session.RoleId];postgresqlDBManager.PSQL_getdata(c,l,function(e,a){if(e)console.log(t,e.message,"Failed to Insert xmldata."),t.send({errorresult:"error"});else{r=a[0].id;cassandra.types.TimeUuid.now();var o='INSERT INTO public."DataConnectors_M_XMLConn"(connectionid, fromurl, radiovalue, uploadedfiles) VALUES ($1, $2, $3, $4);';console.log(o);var n=[r,s[0].FromUrl,s[0].RadioValue,s[0].UploadedFiles];postgresqlDBManager.PSQL_InsertData(o,n,function(e,a){e?(console.log(o),console.log(t,e.message,"Failed to Insert SqlServerdata."),t.send("Failed to Insert")):(console.log(o),console.log("inserted monGO"),t.send({responsedata:"inserted"}))}),console.log("inserted")}})}else{console.log("save button clicked fron update");c='update public."Analytics_M_Connections" ';c+="set connectionname=$1 where id=$2",console.log(c);l=[s[0].ConnectionName,s[0].HiddenConId];if(postgresqlDBManager.PSQL_getdata(c,l,function(e,a){if(e)console.log(t,e.message,"Failed to update data.");else{console.log("UPDATEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");"radiovalue=$1,fromurl=$2,uploadedfiles=$3 where connectionid=$4";var o=[s[0].RadioValue,s[0].FromUrl,s[0].UploadedFiles,s[0].HiddenConId];postgresqlDBManager.PSQL_getdata('update public."DataConnectors_M_XMLConn" set radiovalue=$1,fromurl=$2,uploadedfiles=$3 where connectionid=$4',o,function(e,a){e?console.log(t,e.message,"Failed to update data."):(console.log("UPDATEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"),t.send({responsedata:"updated"}))})}}),"FromUrl"==s[0].RadioValue){var d,u=s[0].FromUrl,p=(o=(d=u.toString()).lastIndexOf("/"),n=d.substring(o+1,d.length),path.join(__dirname,"/public/Analytics/uploadedxmlfiles/"+n));if(fs.existsSync(p))console.log("Directory Exist"),t.send("File already Exists");else console.log("NewFile"),download(u,{directory:__dirname+"/public/Analytics/uploadedxmlfiles",filename:""+n},function(e){if(e)throw e;console.log("meow")})}}}else t.send({isauthenticated:!1})}catch(e){console.log("Error:\t/XMLFile/SaveXMLFileData"+e)}}),app.post("/ExcelFile/SaveExcelFileData",function(e,i){try{if(!0===e.session.authenticated){console.log(e.body.routinedata);var a=cassandra.types.TimeUuid.now(),c=JSON.parse(e.body.routinedata);if(c[0].id=a,"Save"==c[0].HiddenConId){if("FromUrl"==c[0].RadioValue){console.log(c[0].FromUrl);var o=""+c[0].FromUrl,n=o.toString(),t=n.lastIndexOf("/"),s=n.substring(t+1,n.length);if(console.log(s),path1=__dirname+"/public/Analytics/uploadedfiles/"+s,fs.existsSync(path1))console.log("File Exists");else download(o,{directory:__dirname+"/public/Analytics/uploadedfiles",filename:""+s},function(e){if(e)throw e;console.log("meow")}),console.log("@@@@@@@@@@@@@@@@@@@")}var r='INSERT INTO public."Analytics_M_Connections"(connectionname, connectiontype,username,"Role")VALUES';r+="($1,$2,$3,$4) RETURNING id;",console.log(r);var l=[c[0].ConnectionName,c[0].ConnType,e.session.myemail,e.session.RoleId];postgresqlDBManager.PSQL_getdata(r,l,function(e,a){if(e)console.log(i,e.message,"Failed to Insert SqlServerdata."),i.send("Fail");else{console.log("inserted excel"),console.log(a[0].id);var o=a[0].id;console.log(o);cassandra.types.TimeUuid.now();var n=c[0].UploadedFiles,t=__dirname+"/public/Analytics/uploadedfiles/"+n,s='INSERT INTO public."DataConnectors_M_ExcelConn"(connectionid, fromurl, radiovalue,sheetnumber,uploadedfilename,uploadedfilepath)VALUES';s+="($1,$2,$3,$4,$5,$6);",console.log(s);var r=[o,c[0].FromUrl,c[0].RadioValue,c[0].Sheetnum,c[0].UploadedFiles,t];postgresqlDBManager.PSQL_getdata(s,r,function(e,a){e?(console.log(i,e.message,"Failed to Insert SqlServerdata."),i.send("Failed to Insert")):(console.log("inserted excel"),i.send("inserted"))})}})}else{console.log("updated excel connection......"),console.log("save button clicked fron update");r='update public."Analytics_M_Connections" set connectionname=$1 where id=$2;',l=[c[0].ConnectionName,c[0].HiddenConId];postgresqlDBManager.PSQL_getdata(r,l,function(e,a){e?console.log(i,e.message,"Failed to delete data."):console.log("UPDATEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD")});var d='select * from public."DataConnectors_M_ExcelConn" where connectionid=$1; ';console.log(d);l=[c[0].HiddenConId];postgresqlDBManager.PSQL_getdata(d,l,function(e,a){if(e)console.log(i,e.message,"Failed to delete data.");else{console.log(a[0].id);var o=c[0].UploadedFiles,n=__dirname+"/public/Analytics/uploadedfiles/"+o;"radiovalue=$1,fromurl=$2,uploadedfilename=$3,uploadedfilepath=$4,sheetnumber=$5 where id=$6";var t=[c[0].RadioValue,c[0].FromUrl,c[0].UploadedFiles,n,c[0].Sheetnum,a[0].id];postgresqlDBManager.PSQL_getdata('update public."DataConnectors_M_ExcelConn" set radiovalue=$1,fromurl=$2,uploadedfilename=$3,uploadedfilepath=$4,sheetnumber=$5 where id=$6',t,function(e,a){if(e)console.log(i,e.message,"Failed to delete data.");else{if(console.log("UPDATEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"),"FromUrl"==c[0].RadioValue){console.log(c[0].FromUrl);var o=""+c[0].FromUrl,n=o.toString(),t=n.lastIndexOf("/"),s=n.substring(t+1,n.length);if(console.log(s),path1=__dirname+"/public/Analytics/uploadedfiles/"+s,fs.existsSync(path1))console.log("File Exists");else download(o,{directory:__dirname+"/public/Analytics/uploadedfiles",filename:""+s},function(e){if(e)throw e;console.log("meow")})}i.send("updated")}})}})}}else i.send({isauthenticated:!1})}catch(e){console.log("Error:\t/ExcelFile/SaveExcelFileData"+e)}}),app.post("/ExcelFile/MyFileUpload",function(e,n){try{if(!0===e.session.authenticated){var t=new formidable.IncomingForm;t.multiples=!0,t.uploadDir=path.join(__dirname,"/public/Analytics/uploadedfiles");var s=t.uploadDir;t.parse(e,function(e,a,o){s=path.join(s,o.file.name),console.log(s),console.log(o.file.name),fs.existsSync(s)?(console.log("Directory Exist"),n.send("File already Exists")):fs.rename(o.file.path,path.join(t.uploadDir,o.file.name),function(e){e?n.send(e.message):(console.log(o.file.name),n.send(o.file.name))})})}else n.send({isauthenticated:!1})}catch(e){console.log("Error:\t/ExcelFile/MyFileUpload"+e)}}),app.get("/ExcelFile/GetExcelConnList",function(e,o){try{if(!0===e.session.authenticated){var a='SELECT id as "Id",connectionname as "ConnectionName" FROM public."Analytics_M_Connections" where connectiontype=$1 and username=$2;';console.log(a);var n=["Excel Connection",e.session.myemail];postgresqlDBManager.PSQL_getdata(a,n,function(e,a){e?(console.log(o,e.message,"failed to read excel conn's."),o.send("Failed to read excel connections")):(console.log("SRIKANTH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2"),o.json(a))})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/ExcelFile/GetExcelConnList"+e)}}),app.post("/ExcelFile/RemoveConnection",function(t,s){try{if(!0===t.session.authenticated){var e='select * from public."DataConnectors_M_ExcelConn" where connectionid=$1;';console.log(e),console.log(t.body.DeleteID);var a=[t.body.DeleteID];postgresqlDBManager.PSQL_getdata(e,a,function(e,a){if(e)console.log(s,e.message,"Failed to delete data.");else{console.log(a[0].id);var o=[a[0].id];postgresqlDBManager.PSQL_getdata('delete from public."DataConnectors_M_ExcelConn" where id=$1',o,function(e,a){if(e)console.log(s,e.message,"Failed to delete data.");else{console.log("deleted excel conn from excel_conn table.......");var o='delete from public."Analytics_M_Connections" where id=$1';console.log(o),console.log(t.body.DeleteID);var n=[t.body.DeleteID];postgresqlDBManager.PSQL_getdata(o,n,function(e,a){e?console.log(s,e.message,"Failed to delete data."):s.send("deleted")})}})}})}else s.send({isauthenticated:!1})}catch(e){console.log("Error:\t/ExcelFile/RemoveConnection"+e)}}),app.post("/ExcelFile/GetExcelFileIdData",function(t,s){try{if(!0===t.session.authenticated){var r,i,c,l,d,u,e='select * from public."Analytics_M_Connections" where id=$1;';console.log(e);var a=[t.body.EditData];postgresqlDBManager.PSQL_getdata(e,a,function(e,a){if(e)console.log(s,e.message,"Failed to Insert SqlServerdata."),s.send("Failed to select");else{console.log(a),r=a[0].connectionname,i=a[0].connectiontype,console.log(r+"  "+i);var o='select * from public."DataConnectors_M_ExcelConn" where connectionid=$1 ';console.log(o);var n=[t.body.EditData];postgresqlDBManager.PSQL_getdata(o,n,function(e,a){if(e)console.log(s,e.message,"Failed to Insert SqlServerdata."),s.send("Failed to select");else{console.log(a),c=a[0].radiovalue,l=a[0].fromurl,u=a[0].sheetnumber,d=a[0].uploadedfilename,console.log(a[0].FromURL),console.log(c+" "+d+" "+l);var o={ConnectionName:r,ConnectionType:i,RadioValue:c,FromURL:l,UploadedFiles:d,SheetNumber:u};s.json(o)}})}})}else s.send({isauthenticated:!1})}catch(e){console.log("Error:\t/ExcelFile/GetExcelFileIdData"+e)}}),app.get("/ExcelFile/AutoFillDropDown",function(e,o){try{if(!0===e.session.authenticated){fs.readdir("./public/Analytics/uploadedfiles",function(e,a){e?(console.log(o,e.message,"Failed to Load uploadedxmlfiles."),o.send("Failed to Load")):o.status(200).send(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Error:\t/ExcelFile/GetExcelFileIdData"+e)}}),app.post("/ExcelFile/GetExcelTableData",function(e,d){try{if(!0===e.session.authenticated){var a=[e.body.SelectedId];postgresqlDBManager.PSQL_getdata('select * from public."DataConnectors_M_ExcelConn" where connectionid=$1',a,function(e,a){if(e)console.log(d,e.message,"Failed to delete data.");else{console.log("select excel conn from excel_conn table.......");var o=[a[0].id];postgresqlDBManager.PSQL_getdata('select * from public."DataConnectors_M_ExcelConn" where id=$1',o,function(e,a){if(e)console.log(d,e.message,"Failed to delete data.");else{if(console.log("excel table data"),console.log(a[0].uploadedfilename),console.log(a[0].sheetnumber),FileName1=a[0].uploadedfilename,"FromUrl"==a[0].radiovalue){var o=(""+a[0].fromurl).toString(),n=o.lastIndexOf("/");FileName1=o.substring(n+1,o.length),console.log(FileName1)}path1=__dirname+"/public/Analytics/uploadedfiles/"+FileName1,console.log(path1);var l=XLSX.readFile(path1),t=l.SheetNames[a[0].sheetnumber];console.log(t),(t=[""+l.SheetNames[a[0].sheetnumber]]).forEach(function(e){var a=l.Sheets[e],o={},n=[];for(z in a)if("!"!==z[0]){for(var t=0,s=0;s<z.length;s++)if(!isNaN(z[s])){t=s;break}var r=z.substring(0,t),i=parseInt(z.substring(t)),c=a[z].v;1==i&&c?o[r]=c:(n[i]||(n[i]={}),n[i][o[r]]=c)}n.shift(),n.shift(),console.log(n),d.json(n)})}})}})}else d.send({isauthenticated:!1})}catch(e){console.log("Error:\t/ExcelFile/GetExcelFileIdData"+e)}}),app.post("/MongoDBConnection/SaveMongo_Connection",function(e,o){json=JSON.parse(e.body.Save_Conndata);var a=cassandra.types.TimeUuid.now();if(json[0].id=a,"save"==json[0].operation){delete json[0].operation;var n="Insert into connections JSON '"+JSON.stringify(json[0])+"'";analytics_client.execute(n,function(e,a){if(e)console.log(o,e.message,"Failed to Insert SqlServerdata."),o.send("Failed to Insert");else{analytics_client.execute('SELECT id as "Id",connectionname as "ConnectionName" FROM connections where connectiontype=? allow filtering',["MongoDB Connection"],function(e,a){e?(console.log(o,e.message,"Failed to Insert SqlServerdata."),o.send("Failed to select")):o.status(200).json({responsedata:a.rows})})}})}else n="update connections set connectionname='"+json[0].connectionname+"',connectiontype='"+json[0].connectiontype+"',servername='"+json[0].servername+"',portnumber="+json[0].portnumber+",databasename='"+json[0].databasename+"' where id="+json[0].operation,analytics_client.execute(n,queryOptions,function(e,a){if(e)console.log(o,e.message,"Failed to delete data.");else{client.execute('SELECT id as "Id",connectionname as "ConnectionName" FROM connections where connectiontype=? allow filtering',["MongoDB Connection"],function(e,a){e?(console.log(o,e.message,"Failed to Insert SqlServerdata."),o.send("Failed to select")):o.status(200).json({responsedata:a.rows})})}})}),app.post("/MongoDBConnection/RemoveMongo_Connection",function(e,o){var a="delete from connections where Id="+e.body.remove_ConndataId;analytics_client.execute(a,queryOptions,function(e,a){e?console.log(o,e.message,"Failed to delete data."):o.status(200).json(a.rows)})}),app.post("/MongoDBConnection/GetMongoCollectionAvail",function(e,s){var r,i,c,a="select * from connections where Id="+e.body.selectedConnId;analytics_client.execute(a,queryOptions,function(e,a){if(e)console.log(s,e.message,"Failed to delete data.");else{c=JSON.stringify(a.rows);var o=JSON.parse(c);r=o[0].servername,i=o[0].portnumber;var n=o[0].databasename,t="mongodb://"+r+":"+i+"/"+n;console.log(t),mongodb.MongoClient.connect(t,function(e,a){e?(console.log(s,e.message,"Failed to update data."),s.send({errorresult:e.message})):a.listCollections().toArray(function(e,a){s.status(200).json({jsonsplist:a})})})}})}),app.post("/MongoDBConnection/GET_Colldtails",function(e,s){var r=JSON.parse(e.body.GET_SPdtail),a="select * from connections where id="+r[0].SelcSPId;analytics_client.execute(a,queryOptions,function(e,a){if(e)console.log(s,e.message,"Failed to update data.");else{var o=a.rows[0].servername,n=a.rows[0].portnumber,t=(a.rows[0].connectionname,a.rows[0].connectiontype,"mongodb://"+o+":"+n+"/"+a.rows[0].databasename);mongodb.MongoClient.connect(t,function(e,a){e?(console.log(s,e.message,"Failed to update data."),s.send({errorresult:e.message})):a.collection(""+r[0].StorePDname).find({},{_id:0}).toArray(function(e,a){s.json({data:a})})})}})}),app.post("/MongoDBConnection/EditMongo_Connection",function(e,o){var a="select * from connections where Id="+e.body.Edit_Conn;analytics_client.execute(a,queryOptions,function(e,a){e?(console.log(o,e.message,"Failed to update data."),o.send({errorresult:e.message})):o.status(200).json(a.rows)})}),app.get("/MongoDBConnection/GetMongoConnList",function(e,o){analytics_client.execute('SELECT id as "Id",connectionname as "ConnectionName" FROM connections where connectiontype=? allow filtering',["MongoDB Connection"],function(e,a){e?(console.log(o,e.message,"Failed to Insert SqlServerdata."),o.send("Failed to select")):o.json(a.rows)})}),app.get("/LoactionDataSource",function(e,o){analytics_client.execute("select * from LocationMaster",function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a)})}),app.get("/getLocationdata",function(e,o){analytics_client.execute('select id as "Id",locationid  as "LocationId",locationname as "LocationName",parentlocationid as "ParentLocationId",description as "Description" from LocationMaster;',function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a.rows)})}),app.post("/checkdistinctlocation",function(e,o){analytics_client.execute("select * from LocationMaster where locationid= ? and locationname= ?  allow filtering",[e.body[0].LocationId,e.body[0].LocationName],function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):(console.log(a.rows.Row),o.status(200).json(a.rows))})}),app.post("/CreateLocationdata",function(e,o){console.log(e.body),console.log("save location data");var a=cassandra.types.TimeUuid.now();e.body[0].id=a;var n="Insert into LocationMaster JSON '"+JSON.stringify(e.body[0])+"'";console.log(n),analytics_client.execute(n,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a.rows)})}),app.get("/getTreeLocationdata",function(e,o){console.log("get location data"),analytics_client.execute('select locationid as "LocationId",locationname as "LocationName" from LocationMaster',function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a.rows)})}),app.put("/UpdateLocationdata/:id",function(e,o){var a="update LocationMaster set LocationName='"+e.body[0].LocationName+"',Description='"+e.body[0].Description+"' where LocationId='"+e.body[0].LocationId+"' and parentlocationid='"+e.body[0].ParentLocationId+"'";analytics_client.execute(a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a.rows)})});var obj=[];function Test(e){var a="select locationid from LocationMaster where parentlocationid  IN('"+e+"') allow filtering;";analytics_client.execute(a,function(e,a){if(e)console.log(a,e.message,"Failed to get LoactionDataSource.");else if(0<a.rows.length)for(var o=0;o<a.rows.length;o++)obj.push({id:a.rows[o].locationid}),Test(a.rows[o].locationid)})}app.put("/DeleteLocationdata/:id",function(e,n){(obj=[]).push({id:e.params.id});Test(e.params.id);setTimeout(function(){for(var o=0;o<obj.length;o++){var e="delete from LocationMaster where LocationId IN('"+obj[o].id+"')";analytics_client.execute(e,function(e,a){e&&console.log(n,e.message,"Failed to get LoactionDataSource."),o>=obj.length&&n.status(200).json(a.rows)})}},100)}),app.put("/DeleteChildLocationdata/:id",function(e,o){var a="delete from LocationMaster where LocationId='"+e.body[0].LocationId+"'";analytics_client.execute(a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a.rows)})}),app.get("/getAssetdata",function(e,o){analytics_client.execute('select assetid as "AssetId",assetname as "AssetName",assetlocname as "AssetLocName",parentasset as "ParentAsset",id as "ID",assetlocid as "AssetLocId",id as "_id" from assetmaster',function(e,a){e?console.log(o,e.message,"Failed to get AssetDataSource."):o.status(200).json(a.rows)})}),app.post("/checkdistinctassets",function(e,o){analytics_client.execute("select * from assetmaster where assetid= ? and assetname= ?  allow filtering",[e.body[0].AssetId,e.body[0].AssetName],function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):(console.log(a.rows),o.status(200).json(a.rows))})}),app.post("/CreateAssetdata",function(e,o){var a=cassandra.types.TimeUuid.now();e.body[0].id=a;var n="Insert into assetmaster JSON '"+JSON.stringify(e.body[0])+"'";analytics_client.execute(n,function(e,a){e?console.log(o,e.message,"Failed to get AssetDataSource."):o.status(200).json(a.rows)})}),app.get("/getTreeAssetdata",function(e,o){analytics_client.execute('select assetid as "AssetId",assetname as "AssetName" from assetmaster',function(e,a){e?console.log(o,e.message,"Failed to get AssetDataSource."):o.status(200).json(a.rows)})}),app.put("/UpdateAssetdata/:id",function(e,o){var a="update assetmaster set AssetName='"+e.body[0].AssetName+"',AssetId='"+e.body[0].AssetId+"' where Id="+e.body[0].Asset_id;analytics_client.execute(a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a.rows)})}),app.put("/DeleteAssetdata/:id",function(e,o){var a="delete from assetmaster  where Id="+e.body[0].Asset_id;analytics_client.execute(a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a.rows)})}),app.get("/getAssetdata1",function(e,o){analytics_client.execute('select id as "_id", assetid as "AssetId",assetname as "AssetName" from assetmaster',function(e,a){e?console.log(o,e.message,"Failed to get AssetDataSource."):o.status(200).json(a.rows)})}),app.get("/gettagdata",function(e,o){analytics_client.execute('select id as "_id",tagname as "TAGNAME", tagalias as "TAGALIAS",opcid as "OPCID" from opc_tagsdata',function(e,a){e?console.log(o,e.message,"Failed to get AssetDataSource."):o.status(200).json(a.rows)})}),app.get("/getVtagdata",function(e,o){analytics_client.execute('select id as "_id",vtagname as "VTagName" from virtualtagtable',function(e,a){e?console.log(o,e.message,"Failed to get TagDataSource."):o.status(200).json(a.rows)})}),app.get("/getMeterdata",function(e,o){analytics_client.execute('select assetname as "AssetName",metername as "Metername",meteraliasname as "MeterAliasName",metertype as "MeterType",meterdescription as "Meterdescription",frequency as "Frequency",meterid as "MeterId",id as "_id",SynctoServer as "SynctoServer",assetid as "AssetId" from metertable',function(e,a){e?console.log(o,e.message,"Failed to get AssetDataSource."):o.status(200).json(a.rows)})}),app.post("/postMeterdadta",function(e,o){var a=cassandra.types.TimeUuid.now();e.body[0].id=a;var n="Insert into metertable JSON '"+JSON.stringify(e.body[0])+"'";console.log(n),analytics_client.execute(n,function(e,a){e?console.log(o,e.message,"Failed to get MeterDataSource."):o.status(200).json(a.rows)})}),app.delete("/DeleteMeterdata/:id",function(e,o){var a="delete from Metertable where id="+e.params.id;console.log(a),analytics_client.execute(a,function(e,a){e?console.log(o,e.message,"Failed to Delete."):o.status(200).json(a.rows)})}),app.put("/UpdateMeterdata/:id",function(e,o){var a="update metertable set MeterAliasName='"+e.body[0].MeterAliasName+"',MeterType='"+e.body[0].MeterType+"',MeterDescription='"+e.body[0].Meterdescription+"',Frequency='"+e.body[0].Frequency+"' where id="+e.body[0].ID;analytics_client.execute(a,function(e,a){e?console.log(o,e.message,"Failed to get LoactionDataSource."):o.status(200).json(a.rows)})}),app.post("/CreateParameter/GET_paramdata",function(e,t){var s=JSON.parse(e.body.Paramdata_obj),r=s[0].param_spname,a=(s[0].param_data,s[0].param_dsname),o=s[0].param_connid;if("Sql Connection"==a){analytics_client.execute("select * from Connections where id=?;",[o],queryOptions,function(e,a){if(e)console.log(t,e.message,"Failed to get Conndata."),t.send(e);else{a.rows[0].databasename;var o="";o="Sql"==a.rows[0].sqltype?{user:a.rows[0].userid,password:a.rows[0].password,server:a.rows[0].servername,port:a.rows[0].portnumber,database:a.rows[0].databasename,options:{encrypt:!0}}:{server:a.rows[0].servername,port:a.rows[0].portnumber,database:a.rows[0].databasename,options:{encrypt:!0}};var n=JSON.parse(s[0].param_data);sql.connect(o).then(function(){var a=new sql.Request,o=function(e){e<n.length&&(a.input(n[e].PARAMETER_NAME.replace("@",""),n[e].Value),e==n.length-1&&a.execute(r,function(e,a,o){e?t.status(200).json({errorresult:e}):t.status(200).json(a)}),o(e+1))};o(0)})}})}}),app.get("/EmsLineDiagram/getallicons_hmimotors",function(e,o){fs.readdir("./public/Analytics/Linediagrams__Icon/HMISymbols/Motors/Motors Small/",function(e,a){e?(console.log(o,e.message,"Failed to HMI Motors."),o.send("Failed to Load")):o.status(200).send(a)})}),app.get("/EmsLineDiagram/getallicons_hmitanks",function(e,o){fs.readdir("./public/Analytics/Linediagrams__Icon/HMISymbols/Tanks/Tanks Small/",function(e,a){e?(console.log(o,e.message,"Failed to Load HMI Tanks."),o.send("Failed to Load")):o.status(200).send(a)})}),app.get("/EmsLineDiagram/getallicons_hmipumps",function(e,o){fs.readdir("./public/Analytics/Linediagrams__Icon/HMISymbols/Pumps/Pumps Small/",function(e,a){e?(console.log(o,e.message,"Failed to Load HMI Pumps."),o.send("Failed to Load")):o.status(200).send(a)})}),app.get("/EmsLineDiagram/getallicons_hmielbows",function(e,o){fs.readdir("./public/Analytics/Linediagrams__Icon/HMISymbols/Elbows/Elbows Small/",function(e,a){e?(console.log(o,e.message,"Failed to Load HMI Tanks."),o.send("Failed to Load")):o.status(200).send(a)})}),app.get("/EmsLineDiagram/getbg_image",function(e,o){fs.readdir("./public/Analytics/Linediagrams__BGImage",function(e,a){e?(console.log(o,e.message,"Failed to Load HMI Tanks."),o.send("Failed to Load")):o.status(200).send(a)})}),app.get("/EmsLineDiagram/getallicons",function(e,o){fs.readdir("./public/Analytics/Linediagrams__Icon",function(e,a){e?(console.log(o,e.message,"Failed to Load HMI Tanks."),o.send("Failed to Load")):o.status(200).send(a)})}),app.post("/EmsLineDiagram/savedata",function(e,a){var o="<project><Block>";o+=e.body[0].blocks+"</Block><connections>"+e.body[0].connections+"</connections><DataNodes>"+e.body[0].DataNodes+"</DataNodes>",o+="<container>"+e.body[0].container+"</container><groupcontainer>"+e.body[0].groupcontainer+"</groupcontainer><advanceimgprop_arraydata>"+e.body[0].advanceimgprop_arraydata+"</advanceimgprop_arraydata></project>",fs.writeFile("./public/Analytics/emsxml/"+e.body[0].filename+".xml",o,function(e){e?a.send(e.message):a.send("Project Saved Successfully")})}),app.post("/EmsLineDiagram/deleteicons",function(e,a){var o="./public/Analytics/Linediagrams__Icon/"+e.body.iconname;fs.unlink(o,function(e){e?a.status(200).send(e.message):a.status(200).send("Icon Deleted Successfully")})}),app.post("/EmsLineDiagram/Saveicons",function(e,n){var t=new formidable.IncomingForm;t.multiples=!0,t.uploadDir=path.join(__dirname,"/public/Analytics/Linediagrams__Icon");var s=t.uploadDir;t.parse(e,function(e,a,o){s=path.join(s,o.file.name),fs.existsSync(s)?n.send("Icon alresdy Exists"):fs.rename(o.file.path,path.join(t.uploadDir,o.file.name),function(e){e?n.send(e.message):n.send(o.file.name)})})}),app.get("/EmsLineDiagram/getemsfiles",function(e,r){var a="./public/Analytics/emsxml",i=[],c=0;fs.readdir(a,function(e,s){s.forEach(function(t){fs.stat(path.join(a,t),function(e,a){var o=new Date(a.mtime),n=o.getMonth()+1+"/"+o.getDate()+"/"+o.getFullYear();i.push({ReportId:c.toString(),ReportName:t,CreatedDate:n,CreatedBy:"iARMS",Desc:"Reports"}),c==s.length-1?r.status(200).json(i):c++})})})}),app.post("/EmsLineDiagram/GetData",function(e,o){var a="./public/Analytics/emsxml/"+e.body.filename+".xml";fs.readFile(a,function(e,a){e?o.send(e.message):new xml2js.Parser({explicitRoot:!1}).parseString(a,function(e,a){e?o.send(e.message):o.status(200).json(a)})})}),app.get("/EmsLineDiagram/getkwhvalues",function(e,a){a.send("hai")}),app.post("/Reporting/filecheck",function(e,a){fs.exists("./public/Analytics/rdlcxml/"+e.body[0].filename+".json",function(e){e?a.send("Exists"):a.send("Doesnot Exist")})}),app.post("/Reporting/savedata",function(e,a){fs.writeFile("./public/Analytics/rdlcxml/"+e.body[0].filename+".json",JSON.stringify(e.body),function(e){e?a.send(e.message):a.send("Report Saved Successfully")})}),app.get("/Reporting/GetRDLCFiles",function(e,r){var a="./public/Analytics/rdlcxml",i=[],c=0;fs.readdir(a,function(e,s){s.forEach(function(t){fs.stat(path.join(a,t),function(e,a){var o=new Date(a.mtime),n=o.getMonth()+1+"/"+o.getDate()+"/"+o.getFullYear();i.push({ReportId:c.toString(),ReportName:t,CreatedDate:n,CreatedBy:"iARMS",Desc:"Reports"}),c==s.length-1?r.status(200).json(i):c++})})})}),app.post("/Reporting/GetData",function(e,o){var a="./public/Analytics/rdlcxml/"+e.body.filename+".json";fs.readFile(a,function(e,a){e?o.send(e.message):o.status(200).send(a)})}),app.post("/Reporting/GetXMLData",function(e,o){var a="./public/Analytics/rdlcxml/"+e.body.filename+".xml";fs.readFile(a,function(e,a){e?o.send(e.message):new xml2js.Parser({explicitRoot:!1}).parseString(a,function(e,a){e?o.send(e.message):o.status(200).json(a)})})}),app.post("/Reporting/UploadFile",function(e,n){var t=new formidable.IncomingForm;t.multiples=!0,t.uploadDir=path.join(__dirname,"/public/Analytics/Uploads");var s=t.uploadDir;t.parse(e,function(e,a,o){s=path.join(s,o.file.name),fs.existsSync(s)?n.send("Image already Exists"):fs.rename(o.file.path,path.join(t.uploadDir,o.file.name),function(e){e?n.send(e.message):n.send(o.file.name)})})}),app.post("/RestfulserviceRequest",function(e,n){var a=e.body.Url,o=e.body.UserName,t=e.body.Password,s="Basic "+new Buffer(o+":"+t).toString("base64");request({url:a,headers:{Authorization:s}},function(e,a,o){n.send(a),console.log(a)})}),app.get("/getVirtualTagsDetails",function(e,o){analytics_client.connect(function(e){e||analytics_client.execute("SELECT * FROM virtualtagtable",function(e,a){e?console.log(e):o.send(a)})})}),app.post("/getdata",function(e,a){var o=e.body.topicname;Consumer=kafka.Consumer,client=new kafka.Client("192.168.4.183:2181"),consumer=new Consumer(client,[{topic:o,partition:0}],{autoCommit:!1}),consumer.on("message",function(e){a.send(e.value+"$$"+o)})}),app.post("/InsertTagsData",function(e,o){var a="",n=cassandra.types.TimeUuid.now();a=0==e.body.EditID?"INSERT INTO icloud.ivirtualtagsdata (ivtagid, ivtagname, igroupname, iactive, ipollfreq, ipolluom, ipostfreq, ipostuom, iselecttagdata, istartfrom) VALUES("+n+", '"+e.body.vtagname+"', '"+e.body.groupname+"', "+e.body.active+", '"+e.body.pollfrq+"', '"+e.body.polltime+"', '"+e.body.postfreq+"', '"+e.body.posttime+"', '"+e.body.tagsarea+"', '"+e.body.strtfrom+"')":"update icloud.ivirtualtagsdata set iactive= "+e.body.active+", ipollfreq='"+e.body.pollfrq+"', ipolluom='"+e.body.polltime+"', ipostfreq ='"+e.body.postfreq+"', ipostuom = '"+e.body.posttime+"', iselecttagdata='"+e.body.tagsarea+"', istartfrom='"+e.body.strtfrom+"' where ivtagid = "+e.body.EditID+" and  ivtagname='"+e.body.vtagname+"' and igroupname='"+e.body.groupname+"' ",analytics_client.connect(function(e){e||analytics_client.execute(a,function(e,a){e?console.log(e):o.status(200).json("Data Cloudified")})})}),app.post("/GetTagsDataforEdit",function(e,o){console.log(e.body.EditID);var a="SELECT * FROM icloud.ivirtualtagsdata where ivtagid ="+e.body.EditID;analytics_client.connect(function(e){e||analytics_client.execute(a,function(e,a){e?console.log(e):o.send(a)})})}),app.post("/DeleteTagData",function(e,o){console.log(e.body),console.log(e.body.ID);var a="delete FROM icloud.ivirtualtagsdata where ivtagid ="+e.body.ID;analytics_client.connect(function(e){e||analytics_client.execute(a,function(e,a){e?console.log(e):o.status(200).json("Tag Deleted Successfully.")})})}),app.post("/ExcelFormula/GetExcelsheets",function(e,n){var t=new formidable.IncomingForm;t.multiples=!0,t.uploadDir=path.join(__dirname,"/public/Analytics/ExcelFiles");var s=t.uploadDir;console.log("aaa "+s),t.parse(e,function(e,a,o){fs.existsSync(s)?fs.rename(o.file.path,path.join(t.uploadDir,o.file.name),function(e){if(e)n.send(e.message);else{s=path.join(s,o.file.name),console.log("Path1 : "+s);var a=XLSX.readFile(s).SheetNames;a=XLSX.readFile(s).SheetNames;console.log("sheet_name_list : "+a),console.log(o.file.name),n.json(a)}}):fs.rename(o.file.path,path.join(t.uploadDir,o.file.name),function(e){if(e)n.send(e.message);else{s=path.join(s,o.file.name);var a=XLSX.readFile(s).SheetNames;a=XLSX.readFile(s).SheetNames;n.json(a)}})})});var hji="";app.post("/ECR/ImportXceltoDataSource",function(e,o){var a=new formidable.IncomingForm;a.multiples=!0,a.uploadDir=path.join(__dirname,"/public/Analytics/ExcelFiles");var n=a.uploadDir;a.parse(e,function(e,d,a){console.log(d.Ddl_sheetName),n=path.join(n,a.file.name);var u=XLSX.readFile(n);u.SheetNames;[""+d.Ddl_sheetName].forEach(function(e){var a=u.Sheets[e],o={},n=[];for(z in a)if("!"!==z[0]){for(var t=0,s=0;s<z.length;s++)if(!isNaN(z[s])){t=s;break}var r=z.substring(0,t),i=parseInt(z.substring(t)),c=a[z].v;1==i&&c?o[r]=c:(n[i]||(n[i]={}),n[i][o[r]]=c)}n.shift(),n.shift(),console.log(n);var l=jsonxml({parent:hji=n});console.log(l),fs.writeFile("./public/Analytics/XMLSchema/"+d.Ddl_sheetName+".xml",l,function(e){if(e)return console.error(e)})}),o.json(hji)})}),app.post("/ECR/GetImportedfiles_List",function(e,o){fs.readdir("./public/Analytics/XMLSchema/",function(e,a){e?(console.log(o,e.message,"Failed to HMI Motors."),o.send("Failed to Load")):o.send(a)})}),app.post("/ECR/GetImportedfileById",function(e,o){var a="./public/Analytics/XMLSchema/"+e.body.param;console.log(a),fs.readFile(a,function(e,a){e?o.json(e.message):new xml2js.Parser({explicitRoot:!1}).parseString(a,function(e,a){e?o.json(e.message):o.send(a)})})}),app.post("/ECR/Delete_ImportedFile",function(e,a){var o="./public/Analytics/XMLSchema/"+e.body.fileName;fs.unlink(o,function(e){e?a.send(e.message):a.send("File Deleted Successfully")})});var Trendlivecomp="",Trendcomp="",path1,url;function GetData(get_spdetails,formula,callback){var data=[{ConnectionID:get_spdetails[0].DSId,DSConnType:get_spdetails[0].DSConnType,DSId:get_spdetails[0].ConnectionID,DSName:get_spdetails[0].DSName,DSCnnCretedby:get_spdetails[0].DSCnnCretedby,formula:get_spdetails[0].formulea}],ConnectionID=get_spdetails[0].ConnectionID,DSConnType=get_spdetails[0].DSConnType,DSId=get_spdetails[0].DSId,DSName=get_spdetails[0].DSName,DSCnnCretedby=get_spdetails[0].DSCnnCretedby,formula=get_spdetails[0].formulea,finallistarr=[],res1,rowfinalres1=[],recordsets;if(formula.match(/\%(.*?)\%/)){var pattern=formula.match(/\%(.*?)\%/),varName=pattern[1];if(console.log(varName),-1!=varName.indexOf("refno"))if(-1!=varName.indexOf("$"))var formulasplit=varName.split("$"),refn=formulasplit[0],id=formulasplit[1],param=formulasplit[2],refquery="SELECT paramdefault from ParameterConfigs where Id='"+id+"'";else var formulasplit=varName.split("_"),refn=formulasplit[0],id=formulasplit[1],param=formulasplit[2],refquery="SELECT paramdefault from ParameterConfigs where Id='"+id+"'";else{var varValue="";if("@datetimenow"==varName){var datenottime=new Date,dd=datenottime.getDate(),mm=datenottime.getMonth()+1,yyyy=datenottime.getFullYear();dd<10&&(dd="0"+dd),mm<10&&(mm="0"+mm);var today=dd+"-"+mm+"-"+yyyy;varValue=today}else if("@yesterday"==varName){var yesterday=(new Date).AddDays(-1),dd=yesterday.getDate(),mm=yesterday.getMonth()+1,yyyy=yesterday.getFullYear();dd<10&&(dd="0"+dd),mm<10&&(mm="0"+mm);var yesterdaydate=dd+"-"+mm+"-"+yyyy;varValue=yesterdaydate}else if("@tomorrow"==varName){var tomorrow=(new Date).AddDays(1),dd=tomorrow.getDate(),mm=tomorrow.getMonth()+1,yyyy=tomorrow.getFullYear();dd<10&&(dd="0"+dd),mm<10&&(mm="0"+mm);var tomorrowdate=dd+"-"+mm+"-"+yyyy;varValue=tomorrowdate}else if("@userlogin"==varName)varValue=User.Identity.Name;else if("@monthstart"==varName){var date=new Date,firstDay=new Date(date.getFullYear(),date.getMonth(),1),dd=firstDay.getDate(),mm=firstDay.getMonth()+1,yyyy=firstDay.getFullYear();dd<10&&(dd="0"+dd),mm<10&&(mm="0"+mm),varValue=dd+"-"+mm+"-"+yyyy}else if("@monthend"==varName){var date=new Date,lastDay=new Date(date.getFullYear(),date.getMonth()+1,0),dd=lastDay.getDate(),mm=lastDay.getMonth()+1,yyyy=lastDay.getFullYear();dd<10&&(dd="0"+dd),mm<10&&(mm="0"+mm),varValue=dd+"-"+mm+"-"+yyyy}else if("@yearstart"==varName){var startyear=new Date((new Date).getFullYear(),1,1),dd=startyear.getDate(),mm=startyear.getMonth()+1,yyyy=startyear.getFullYear();dd<10&&(dd="0"+dd),mm<10&&(mm="0"+mm);var startyeardate=dd+"-"+mm+"-"+yyyy;varValue=startyeardate}else if("@yearend"==varName){var endyear=new Date((new Date).getFullYear(),12,31),dd=endyear.getDate(),mm=endyear.getMonth()+1,yyyy=endyear.getFullYear();dd<10&&(dd="0"+dd),mm<10&&(mm="0"+mm);var endyeardate=dd+"-"+mm+"-"+yyyy;varValue=endyeardate}formula=formula.Replace("%"+varName+"%",varValue),console.log(varName)}}""==ConnectionID&&""==DSConnType?(res1=formula.match(/^[\w\s]*$/)?formula:formula.match(/^[a-zA-Z0-9//%()@$ ]*$/)?formula:eval(formula),rowfinalres1.push(res1),console.log("json rowfinalres1 "+JSON.stringify(rowfinalres1))):DataConnectivity.connect_cassandra(function(e){var v=e;DataConnectivity.cassandra_getData(JSON.stringify(data),function(e){if(recordsets=e,-1!=formula.indexOf("SUM(data)"))return v.coldata="";if(-1!=formula.indexOf("CUMULATIVE(data)"))return v.coldata="";if(-1!=formula.indexOf("MIN(data)"))return v.coldata="";if(-1!=formula.indexOf("MAX(data)"))return v.coldata="";if(-1!=formula.indexOf("COUNT(data)"))return v.coldata="";if(-1!=formula.indexOf("AVERAGE(data)"))return v.coldata="";if(formula.match(/SUM(.*?),/g)){for(var a=[],o=new RegExp(/SUM(.*?),/g);null!==(f=o.exec(formula));){D=(D=(D=f[1].replace("(","")).replace("[","")).replace("]",""),a.push(D)}var n=0;for(var t in a){var s=a[t];for(var r in recordsets)recordsets[r].hasOwnProperty(s)&&(n+=recordsets[r][s])}formula=n,console.log("sumcoldata "+n)}else if(formula.match(/COUNT(.*?),/)){var i=[];for(o=new RegExp(/COUNT(.*?),/);null!==(f=o.exec(formula));){D=(D=(D=f[1].replace("(","")).replace("[","")).replace("]",""),i.push(D)}var c=0;for(var t in i){s=i[t];for(var r in recordsets)recordsets[r].hasOwnProperty(s)&&(c+=1)}formula=c,console.log("cntcoldata "+c)}else if(formula.match(/MIN(.*?),/)){var l=[];for(o=new RegExp(/MIN(.*?),/);null!==(f=o.exec(formula));){D=(D=(D=f[1].replace("(","")).replace("[","")).replace("]",""),l.push(D)}var d=0;for(var t in l){s=l[t];for(var r in recordsets)if(recordsets[r].hasOwnProperty(s)){var u=recordsets[r][s];d=0==d?u:d<u?d:u}}formula=d,console.log("cntcoldata "+d)}else if(formula.match(/MAX(.*?),/)){var p=[];for(o=new RegExp(/MAX(.*?),/);null!==(f=o.exec(formula));){D=(D=(D=f[1].replace("(","")).replace("[","")).replace("]",""),p.push(D)}var m=0;for(var t in p){s=p[t];for(var r in recordsets)if(recordsets[r].hasOwnProperty(s)){var g=recordsets[r][s];m=0==m?g:g<m?m:g}}formula=m,console.log("cntcoldata "+m)}else if(formula.match(/AVERAGE(.*?),/)){var f,y=[];for(o=new RegExp(/AVERAGE(.*?),/);null!==(f=o.exec(formula));){var D;D=(D=(D=f[1].replace("(","")).replace("[","")).replace("]",""),y.push(D)}var b=0,S=0;for(var t in y){s=y[t];for(var r in recordsets){if(recordsets[r].hasOwnProperty(s))b+=recordsets[r][s],S+=1}}var _=b/S;formula=_,console.log("cntcoldata "+_)}else if(formula.match(/\w*@\w*/)){var h=formula.split("@");formula=h[0];var C=h[1];for(var r in recordsets)recordsets[r].hasOwnProperty(formula)&&finallistarr.push(recordsets[r][formula]);console.log("finallistarr wordindex "+finallistarr[C-1]),callback(!1,finallistarr[C-1])}else{for(var r in recordsets)formula=(formula=formula.replace("[","")).replace("]",""),recordsets[r].hasOwnProperty(formula)&&finallistarr.push(recordsets[r][formula]);console.log("finallistarr "+finallistarr),callback(!1,finallistarr)}})})}function convertdatatoarrays(e){var a=_.keys(e[0]),o=new Array(a);for(data in e){var n=_.values(e[data]);o[o.length]=n}return o}app.post("/CompareTrends/LiveData",function(e,a){console.log(e.body),a.json("")}),app.post("/CompareTrends/CurrentData",function(e,a){console.log(e.body),a.json("")}),app.get("/Trends/Live",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/Trends/Live.html")}),app.get("/Trends/Compare_Trends",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/Trends/Compare_Trends.html")}),app.get("/ManualReading/MeterSelection",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/ManualReading/MeterSelection.html")}),app.get("/EMSParameter/ParameterSelection",function(e,a){a.sendfile(__dirname+"/public/Analytics/Views/EMSParameter/ParameterSelection.html")}),app.post("/checktrendname",function(e,o){var a="SELECT * FROM iarms360.comparetrends where trendname = '"+e.body.trend+"' and userid = '"+e.body.username+"'";console.log(a),analytics_client.execute(a,queryOptions,function(e,a){e?console.log(o,e.message,"Fail to Save Data."):0==a.rowLength?o.send("FALSE"):o.send("TRUE")})}),app.post("/BookmarkData",function(e,a){console.log(e),console.log(e.body),console.log(e.body.selectedlist),a.send("")}),app.post("/CreatingRuleEngine",function(e,o){try{var a=e.body[0].RuleName,n=cassandra.types.TimeUuid.now();e.body[0].id=n,e.body[0].Condition="",e.body[0].Action="",0<e.body[0].MultiConditions.length&&(e.body[0].Condition=JSON.stringify(e.body[0].MultiConditions[0].Condition),e.body[0].Action=JSON.stringify(e.body[0].MultiConditions[1].Actions));postgresqlDBManager.PSQL_getdata('INSERT INTO public."Analytics_M_RuleEngine"(rulename, ruledesc, active, condition, action, createdby, postid, triggerid)VALUES($1,$2,$3,$4,$5,$6,$7,$8);',[a,e.body[0].RuleDesc,e.body[0].Active,e.body[0].Condition,e.body[0].Action,"Admin",e.body[0].PostId,e.body[0].TriggerId],function(e,a){e?(console.log("err : "+e),o.send({error:e.message})):o.send({data:"Successfully Inserted"})})}catch(e){console.log(e)}}),app.get("/getREList",function(e,o){try{postgresqlDBManager.PSQL_getdata('select id,rulename,createdby from public."Analytics_M_RuleEngine"',null,function(e,a){e?(console.log("err : "+e),o.send({error:e.message})):o.send(a)})}catch(e){console.log(e.message)}}),app.get("/getRECollection",function(e,o){try{postgresqlDBManager.PSQL_getdata('select * from public."Analytics_M_RuleEngine" where id=$1',[e.body[0]],function(e,a){e?(console.log("err : "+e),o.send({error:e.message})):o.send(a)})}catch(e){console.log(e.message)}}),app.put("/DeleteRECollection/:id",function(e,o){console.log(e.params.id);try{postgresqlDBManager.PSQL_getdata('delete from public."Analytics_M_RuleEngine" where id=$1',[e.params.id],function(e,a){e?(console.log("err : "+e),o.send({error:e.message})):o.send("Successfully Deleted")})}catch(e){}}),app.post("/EditRuleEnginedata/:id",function(e,o){try{postgresqlDBManager.PSQL_getdata('select action,editcondition from public."Analytics_M_RuleEngine" where id=$1',[e.params.id],function(e,a){e?(console.log("err : "+e),o.send({error:e.message})):o.send(a[0])})}catch(e){}}),app.get("/getopctags",function(e,o){try{var a="select distinct description,equipementname from itvdataparameterlist where equipementname!='';";console.log(a),postgresqlDBManager.PSQL_getdata(a,null,function(e,a){e?(console.log("err"+e),handleError(o,e.message,"Failed to get AssetDataSource.")):o.status(200).json(a)})}catch(e){console.log(e.message)}}),app.post("/CreatingModbusDevice",function(e,o){db.collection("ModbusDevice").insertOne(e.body[0],function(e,a){e?handleError(o,e.message,"Failed to create new Modbus Device."):o.status(201).json(a.ops[0])})}),app.get("/getModbusDeviceList",function(e,o){db.collection("ModbusDevice").find({}).toArray(function(e,a){e?handleError(o,e.message,"Failed to get REList DataSource."):o.status(200).json(a)})}),app.get("/getParamsList",function(e,o){db.collection("Parameter_Master").find({}).toArray(function(e,a){e?handleError(o,e.message,"Failed to get Parameter_Master List DataSource."):o.status(200).json(a)})}),app.post("/CreatingModbusNode",function(e,o){db.collection("ModbusDeviceNode").insertOne(e.body[0],function(e,a){e?handleError(o,e.message,"Failed to create new Modbus Device Node."):o.status(201).json(a.ops[0])})}),app.get("/getModbusNodeList",function(e,o){db.collection("ModbusDeviceNode").find({}).toArray(function(e,a){e?handleError(o,e.message,"Failed to get REList DataSource."):o.status(200).json(a)})}),app.post("/CreatingModbusNode",function(e,a){}),app.get("/getDesignValuesData",function(e,a){console.log("hai")}),app.post("/DesignValuesupdatedata",function(e,a){}),app.post("/DeleteDesignValues",function(e,a){}),app.post("/CassandraConnection/GetDatabaseList",function(e,n){try{if(1==e.session.authenticated){var a=JSON.parse(e.body.Conndata),o=a[0].ServerName+":"+a[0].PortNumber,t=new cassandra.Client({contactPoints:[o]});t.connect(function(e){if(e)n.status(200).json({error:e.message});else{var o="SELECT keyspace_name from system_schema.keyspaces;";t.execute(o,function(e,a){e?-1<e.message.indexOf("Keyspace system_schema does not exist")?(o="SELECT keyspace_name from system.schema_keyspaces;",t.execute(o,function(e,a){e?n.status(200).json({error:e.message}):n.status(200).json({dblist:a.rows})})):n.status(200).json({error:e.message}):n.status(200).json({dblist:a.rows})})}})}else n.status(200).json({isauthenticated:!1})}catch(e){n.status(200).json({error:e.message})}}),app.post("/CqlConnection/Savecas_Connection",function(n,t){try{if(1==n.session.authenticated)if("save"==n.body[0].operation){var o='select count(*) from "Analytics_M_Connections" where connectionname=$1 and connectiontype=$2';postgresqlDBManager.PSQL_getdata(o,[n.body[0].ConnectionName,"Cassandra Connection"],function(e,a){e?t.status(200).json({error:e.message}):0<a[0].count?t.status(200).json({data:"duplicates"}):(o='INSERT INTO "Analytics_M_Connections"(connectas, connectionname, connectiontype, databasename, password, portnumber, servername,  userid, username, "Role") VALUES ( $1, $2, $3, $4, $5, $6, $7, $8, $9, $10)',postgresqlDBManager.PSQL_InsertData(o,[n.body[0].Connectas,n.body[0].ConnectionName,n.body[0].ConnectionType,n.body[0].databasename,n.body[0].Password,n.body[0].PortNumber,n.body[0].ServerName,n.body[0].Userid,n.session.myemail,n.session.RoleId],function(e,a){e?t.status(200).json({error:e.message}):(o='select ConnectionName as "ConnectionName",Id as "Id" from "Analytics_M_Connections" where UserName=$1 and ConnectionType=$2',postgresqlDBManager.PSQL_getdata(o,[n.session.myemail,n.body[0].ConnectionType],function(e,a){e?t.status(200).json({error:e.message}):t.status(200).json({data:a})}))}))})}else{o='select count(*) from "Analytics_M_Connections" where connectionname=$1 and connectiontype=$2 and id!=$3';postgresqlDBManager.PSQL_getdata(o,[n.body[0].ConnectionName,"Cassandra Connection",n.body[0].operation],function(e,a){if(e)t.status(200).json({error:e.message});else if(0==a[0].count){var o='update "Analytics_M_Connections" set connectionname=$1,connectiontype=$2,databasename=$3,password=$4,portnumber=$5,servername=$6,userid=$7,username=$8,"Role"=$9 where id=$10';postgresqlDBManager.PSQL_InsertData(o,[n.body[0].ConnectionName,n.body[0].ConnectionType,n.body[0].databasename,n.body[0].Password,n.body[0].PortNumber,n.body[0].ServerName,n.body[0].Userid,n.session.myemail,n.session.RoleId,n.body[0].operation],function(e,a){e?t.status(200).json({error:e.message}):(o='select ConnectionName as "ConnectionName",Id as "Id" from "Analytics_M_Connections" where UserName=$1 and ConnectionType=$2',postgresqlDBManager.PSQL_getdata(o,[n.session.myemail,n.body[0].ConnectionType],function(e,a){e?t.status(200).json({error:e.message}):t.status(200).json({data:a})}))})}else t.status(200).json({data:"duplicates"})})}else t.status(200).json({isauthenticated:!1})}catch(e){t.status(200).json({error:e.message})}}),app.get("/CassandraConnection/GetCassandraConnList",function(e,o){try{if(!0===e.session.authenticated){postgresqlDBManager.PSQL_getdata('select connectionname as "ConnectionName",id as "Id" from "Analytics_M_Connections" where username=$1 and connectiontype=$2',[e.session.myemail,"Cassandra Connection"],function(e,a){e?(console.log("error : "+e.message),o.status(200).json({error:e.message})):(console.log(a),o.status(200).json({data:a}))})}else o.status(200).json({isauthenticated:!1})}catch(e){o.status(200).json({error:e.message})}}),app.post("/CqlConnection/RemoveCassandra_Connection",function(e,o){try{if(1==e.session.authenticated){var a='delete from "Analytics_M_Connections" where id='+e.body.remove_ConndataId;postgresqlDBManager.PSQL_InsertData(a,null,function(e,a){e?o.status(200).json({error:e.message}):o.status(200).json({data:"Successfully connection deleted"})})}else o.status(200).json({isauthenticated:!1})}catch(e){o.status(200).json({error:e.message})}}),app.post("/CassandraConnection/Editcassandra_Connection",function(e,o){try{if(1==e.session.authenticated){var a='select * from "Analytics_M_Connections" where id='+e.body.Edit_Conn;postgresqlDBManager.PSQL_getdata(a,null,function(e,a){e?o.status(200).json({error:e.message}):o.status(200).json({data:a})})}else o.status(200).json({isauthenticated:!1})}catch(e){o.status(200).json({error:e.message})}}),app.post("/CassandraConnection/SaveCassandraQuery",function(o,n){try{if(1==o.session.authenticated)if("save"==o.body[0].operation){var t='select * from "DataConnectors_M_CassandraConn" where tablename=$1 and connectionid=$2';postgresqlDBManager.PSQL_getdata(t,[o.body[0].Name,o.body[0].ConnIdhidespedit],function(e,a){e?n.status(200).json({error:e.message}):0<a.length?n.status(200).json({duplicate:a}):(t='INSERT INTO "DataConnectors_M_CassandraConn"(connectionid,  query, tablename)VALUES($1,$2,$3)',postgresqlDBManager.PSQL_InsertData(t,[o.body[0].ConnIdhidespedit,o.body[0].SPCreateQuery,o.body[0].Name],function(e,a){e?n.status(200).json({error:e.message}):(t='select * from "DataConnectors_M_CassandraConn" where connectionid='+o.body[0].ConnIdhidespedit,postgresqlDBManager.PSQL_getdata(t,null,function(e,a){e?n.status(200).json({error:e.message}):n.status(200).json({data:a})}))}))})}else t='select count(*) from "DataConnectors_M_CassandraConn" where tablename=$1 and id!=$2',postgresqlDBManager.PSQL_getdata(t,[o.body[0].Name,o.body[0].operation],function(e,a){e?n.status(200).json({error:e.message}):0==a[0].count?(t='update  "DataConnectors_M_CassandraConn" set   query=$1,tablename=$3 where id=$2',postgresqlDBManager.PSQL_InsertData(t,[o.body[0].SPCreateQuery,o.body[0].operation,o.body[0].Name],function(e,a){e?n.status(200).json({error:e.message}):(t='select * from "DataConnectors_M_CassandraConn" where connectionid='+o.body[0].ConnIdhidespedit,postgresqlDBManager.PSQL_getdata(t,null,function(e,a){e?n.status(200).json({error:e.message}):n.status(200).json({data:a})}))})):n.status(200).json({duplicate:a})});else n.status(200).json({isauthenticated:!1})}catch(e){n.status(200).json({error:e.message})}}),app.post("/CassandraConnection/GetSelectedCassandraList",function(e,o){try{if(1==e.session.authenticated){var a='select * from "DataConnectors_M_CassandraConn" where connectionid='+e.body.Conndata;postgresqlDBManager.PSQL_getdata(a,null,function(e,a){e?o.status(200).json({error:e.message}):o.status(200).json({data:a})})}else o.status(200).json({isauthenticated:!1})}catch(e){o.status(200).json({error:e.message})}}),app.post("/CassandraConnection/CassandraSPGet",function(e,t){try{var a=JSON.parse(e.body.GET_SPdtail),o=a[0].StorePDname;a[0].SelcSPId;if(1==e.session.authenticated){postgresqlDBManager.PSQL_getdata('select amc.servername,amc.portnumber,amc.databasename,amc.userid,amc.password,dmc.query from "Analytics_M_Connections" as AMC inner join "DataConnectors_M_CassandraConn" as DMC on AMC.id=DMC.connectionid where DMC.id=$1',[o],function(e,a){if(e)t.status(200).json({error:e.message});else{a[0].databasename;var o=a[0].servername+":"+a[0].portnumber,n=new cassandra.Client({contactPoints:[o],keyspace:a[0].databasename});n.connect(function(e){e?t.status(200).json({error:e.message}):n.execute(a[0].query,function(e,a){e?t.status(200).json({error:e.message}):t.status(200).json({res:a.rows})})})}})}else t.status(200).json({isauthenticated:!1})}catch(e){t.status(200).json({error:e.message})}}),app.post("/CasConnection/CassandraSPGetEdit",function(e,o){var a=JSON.parse(e.body.CassGetSPforedit)[0].Editspitem;try{if(1==e.session.authenticated){postgresqlDBManager.PSQL_getdata('select * from "DataConnectors_M_CassandraConn" where id=$1',[a],function(e,a){e?o.status(200).json({error:e.message}):o.status(200).json({data:a})})}else o.status(200).json({isauthenticated:!1})}catch(e){o.status(200).json({error:e.message})}}),app.post("/CasConnection/RemoveCas_SPConnection",function(e,o){var n=JSON.parse(e.body.Remove_ConnSPdata);try{if(1==e.session.authenticated){var t='delete from "DataConnectors_M_CassandraConn" where id=$1';postgresqlDBManager.PSQL_InsertData(t,[n[0].SelectedSPS],function(e,a){e?o.status(200).json({error:e.message}):(t='select * from "DataConnectors_M_CassandraConn" where connectionid='+n[0].ConnIdhide,postgresqlDBManager.PSQL_getdata(t,null,function(e,a){e?o.status(200).json({error:e.message}):o.status(200).json({data:a})}))})}else o.status(200).json({isauthenticated:!1})}catch(e){o.status(200).json({error:e.message})}}),app.post("/CassandraConnection/CassandraSPGetEdit",function(e,o){console.log("edit and update"),console.log(Edit_Conn);var a="select * from connections where id="+e.body.Edit_Conn;analytics_client.execute(a,function(e,a){e?console.log(o,e.message,"Failed to update data."):o.status(200).json(a.rows)})}),app.get("/GetAllConnectionData/AllConnGrid",function(e,r){var i=[];try{analytics_client.execute("SELECT id, connectas, connectionname, connectiontype, databasename, password, portnumber, servername, service, sqltype, userid, username FROM connections;",queryOptions,function(e,t){if(e)r.status(200).send({errorresult:e.message});else{t=t.rows;var s=function(n){if(n<t.length)try{"Sql Connection"==t[n].connectiontype?analytics_client.execute("SELECT connectionid, selected_sp, checked, id FROM sql_conn where connectionid="+t[n].id+";",queryOptions,function(e,a){if(e)r.status(200).send({errorresult:e.message});else{var o=function(e){e<a.rows.length?(i.push({Id:a.rows[e].connectionid,SPId:a.rows[e].id,ConnectionName:t[n].connectionname,ConnectionType:t[n].connectiontype,DataSource:a.rows[e].selected_sp,UserName:"Admin"}),o(e+1)):s(n+1)};o(0)}}):"Cassandra Connection"==t[n].connectiontype?analytics_client.execute("SELECT connectionid, tablename, id, query FROM iarms360.cassandra_conn where connectionid="+t[n].id+";",queryOptions,function(e,a){if(e)r.status(200).send({errorresult:e.message});else{var o=function(e){e<a.rows.length?(i.push({Id:a.rows[e].connectionid,SPId:a.rows[e].id,ConnectionName:t[n].connectionname,ConnectionType:t[n].connectiontype,DataSource:a.rows[e].tablename,UserName:"Admin"}),o(e+1)):s(n+1)};o(0)}}):"MongoDB Connection"==t[n].connectiontype?(i.push({Id:t[n].id,SPId:t[n].id,ConnectionName:t[n].connectionname,ConnectionType:t[n].connectiontype,DataSource:t[n].databasename,UserName:"Admin"}),s(n+1)):"Oracle Connection"==t[n].connectiontype?(i.push({Id:t[n].id,SPId:t[n].id,ConnectionName:t[n].connectionname,ConnectionType:t[n].connectiontype,DataSource:t[n].databasename,UserName:"Admin"}),s(n+1)):"XML Connection"==t[n].connectiontype?(i.push({Id:t[n].id,SPId:t[n].id,ConnectionName:t[n].connectionname,ConnectionType:t[n].connectiontype,DataSource:t[n].databasename,UserName:"Admin"}),s(n+1)):"Excel Connection"==t[n].connectiontype&&(i.push({Id:t[n].id,SPId:t[n].id,ConnectionName:t[n].connectionname,ConnectionType:t[n].connectiontype,DataSource:t[n].databasename,UserName:"Admin"}),s(n+1))}catch(e){r.status(200).send({errorresult:e.message})}else r.status(200).json({responsegrid:i})};s(0)}})}catch(e){r.status(200).send({errorresult:e.message})}}),app.post("/GetAllConnectionData/GET_SPGriddtails",function(e,c){try{var n=JSON.parse(e.body.Get_SPGriddtail),r=n[0].DSName,i=n[0].DSId,a=n[0].DSConnType;"Cassandra Connection"==a?analytics_client.execute("Select * from Connections where id=?;",[i],queryOptions,function(e,a){if(e)console.log(c,e.message,"Failed to get Cassandra Data."),c.status(200).send({errorresult:e.message});else{var o=new cassandra.Client({contactPoints:[a.rows[0].servername+":"+a.rows[0].portnumber],queryOptions:{consistency:cassandra.types.consistencies.localquorum},keyspace:a.rows[0].databasename});cassandra.types.consistencies.localquorum;o.connect(function(e){e?c.status(200).send({errorresult:e.message}):(console.log("Successfully connected to the cassandra database"),o.execute("Select * from cassandra_conn where id="+n[0].ConnectionID+" and connectionid="+n[0].DSId+" allow filtering;",function(e,a){e?c.status(200).send({errorresult:e.message}):o.execute(a.rows[0].query,function(e,a){if(e)c.send({error:e.message});else{var o=convertdatatoarrays(a.rows);c.status(200).json({tabledata:o})}})}))})}}):"Sql Connection"==a?analytics_client.execute("Select * from Connections where id=?;",[i],queryOptions,function(e,a){if(e)console.log(c,e.message,"Failed to get SQL Data."),c.status(200).send({errorresult:e.message});else{var o=a.rows[0].databasename,t="",n=a.rows[0].sqltype;t="Sql"==n?{user:a.rows[0].userid,password:a.rows[0].password,server:a.rows[0].servername,port:a.rows[0].portnumber,database:a.rows[0].databasename,options:{encrypt:!0}}:{server:a.rows[0].servername,port:a.rows[0].portnumber,database:a.rows[0].databasename,options:{encrypt:!0}};var s="Select * from ParameterConfigs where ConnId="+i+" and Selspname='"+r+"' and UserName='ASD' allow filtering;";analytics_client.execute(s,queryOptions,function(a,n){a?c.status(200).send({errorresult:a}):0<n.rows.length?sql.connect(t).then(function(){var a=new sql.Request,o=function(e){e<n.rows.length&&(a.input(n.rows[e].selparamname.replace("@",""),n.rows[e].paramdefault),e==n.rows.length-1&&a.execute(r,function(e,a,o){if(e)c.status(200).json({errorresult:e});else{var n=convertdatatoarrays(a[0]);c.status(200).json({tabledata:n})}}),o(e+1))};o(0)}):sql.connect(t).then(function(){(new sql.Request).query("select PARAMETER_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH from information_schema.parameters where specific_name='"+r+"' and SPECIFIC_CATALOG='"+o+"'").then(function(e){a?c.status(200).send({errorresult:a.message}):0<e.length?c.status(200).send({responsedata:"Show Param Configure"}):sql.connect(t).then(function(){(new sql.Request).execute(r,function(e,a,o){if(e)c.status(200).json({errorresult:e});else{var n=convertdatatoarrays(a[0]);c.status(200).json({tabledata:n})}})})}).catch(function(e){c.status(200).send({errorresult:e.message})})}).catch(function(e){c.status(200).send({errorresult:e.message})})})}}):"MongoDB Connection"==a?analytics_client.execute("Select * from Connections where id=?;",[i],queryOptions,function(e,a){if(e)console.log(c,e.message,"Failed to get MongoDB Data."),c.status(200).send({errorresult:e.message});else{var o="mongodb://"+a.rows[0].servername+":"+a.rows[0].portnumber+"/"+a.rows[0].databasename;mongodb.MongoClient.connect(o,function(e,a){e?c.status(200).send({errorresult:e.message}):a.listCollections().toArray(function(e,a){var o=convertdatatoarrays(a);c.status(200).json({tabledata:o})})})}}):"XML Connection"==a&&analytics_client.execute('Select uploadedfiles as "UploadedFiles",radiovalue as "RadioValue",fromurl as "FromURL" FROM xml_conn where connectionid='+n[0].ConnectionID+" allow filtering",function(e,a){if(e)console.log(c,e.message,"Failed to get XML Data."),c.status(200).send({errorresult:e.message});else{console.log(a),console.log(a.rows);var o=a.rows[0].RadioValue,n=a.rows[0].FromURL,t=a.rows[0].UploadedFiles;if("FromUrl"==o){var s=n.toString(),r=s.lastIndexOf("/"),i=s.substring(r+1,s.length);path11=__dirname+"/public/Analytics/uploadedxmlfiles/"+i,fs.readFile(""+path11,"utf8",function(e,a){if(e)return console.log(e);var o,n,t,s=""+path11;o=s,t=fs.readFileSync(o,"ascii"),new xml2js.Parser({explicitRoot:!1,explicitChildren:!1}).parseString(t.substring(0,t.length),function(e,a){n=JSON.stringify(a),console.log("if"+n),c.send(n)})})}else path11=__dirname+"/public/Analytics/uploadedxmlfiles/"+t,fs.readFile(""+path11,"utf8",function(e,a){if(e)return console.log(e);var o,n,t,s=""+path11;o=s,t=fs.readFileSync(o,"ascii"),new xml2js.Parser({explicitRoot:!1,explicitChildren:!1}).parseString(t.substring(0,t.length),function(e,a){n=JSON.stringify(a),console.log("else"+n),c.send(n)})})}})}catch(e){c.status(200).send({errorresult:e.message})}}),app.post("/GetAllConnectionData/GET_DataForMathOperations",function(e,o){try{var a=JSON.parse(e.body.Get_SPGriddtail);a[0].DSName,a[0].DSId;console.log("GetAllConnectionData "+a[0].DSName),GetData(a,a[0].formulea,function(e,a){console.log("Data : "+a),e?o.status(200).send({errorresult:e}):o.status(200).send({tabledata:a})})}catch(e){o.send(e.toString())}}),app.post("/GetAllConnectionData/GET_DataForMathOperations_1",function(e,o){try{var a=JSON.parse(e.body.Get_SPGriddtail);a[0].DSName,a[0].DSId;GetData(a,a[0].formulea,function(e,a){console.log("Data : "+a),e?o.status(200).send({errorresult:e}):o.status(200).send({tabledata:a})})}catch(e){o.send(e.toString())}}),app.get("/Home/gettreejsonforview",function(e,o){try{fs.readFile("public/Analytics/Bi360ReportsTree/Dashboardrepository.htm",function(e,a){e?o.send({error:e.message}):(console.log(a),o.writeHeader(200,{"Content-Type":"text/html"}),o.write(a),o.end())})}catch(e){o.send({error:e.message})}}),app.post("/Home/deletedashboardbyid",function(n,t){var e="Delete from Dashboards where dashboardid='"+n.body.dashboardid+"'";analytics_client.execute(e,queryOptions,function(e,a){if(e)handleError(t,e.message,"GetDashboardsList: Failed to get Dashboard List");else try{var o="public/Analytics/BIDashboards/"+n.body.dashboardid+".json";fs.unlinkSync(o),t.status(200).json(!1)}catch(e){console.log(e.message),t.status(200).json(!0)}})}),app.post("/Home/SaveTreeReport",function(e,a){console.log(),fs.writeFile("public/Analytics/Bi360ReportsTree/Dashboardrepository.htm",e.body.treedata,function(e){e&&console.log(e),a.status(200).json(!0)})}),app.get("/ViewDashboard/gettreejsonforview",function(e,o){try{fs.readFile("public/Analytics/Bi360ReportsTree/Dashboardrepository.htm","utf8",function(e,a){e?o.send({error:e.message}):o.send({treejson:a})})}catch(e){o.send({error:e.message})}}),app.get("/KafkaNode_Tree",function(e,o){try{var a=new cassandra.Client({contactPoints:["192.168.4.186:9042","192.168.4.166:9042"],queryOptions:{consistency:cassandra.types.consistencies.local_quorum},keyspace:"kafka_demo"});a.connect(function(e){e?console.log("Error in db Connection..............."):console.log("cassnadra db is  Connected....");a.execute("select * from iarmsmessagner",function(e,a){e?console.log(e):o.send(a)})})}catch(e){console.log("Error:\tKafkaNode_Tree"+e.message),o.send(e.message)}}),app.get("/TopicList",function(e,o){try{var a=new kafka.Client("192.168.4.182:2181");a.once("connect",function(){a.loadMetadataForTopics([],function(e,a){e?console.log(e):(console.log(a[1].metadata),o.send(a[1].metadata))})})}catch(e){console.log("Error :\tTopicList"+e.message),o.send(e.message)}}),app.get("/Replication",function(e,o){try{var a=new kafka.Client("192.168.4.182:2181");a.once("connect",function(){a.loadMetadataForTopics([],function(e,a){e?console.log(e):o.send(a[0])})})}catch(e){console.log("Error :\tReplication"+e.message),o.send(e.message)}}),app.post("/PData",function(e,a){e.body.ClusterName,e.body.Host,e.body.Port;var o=e.body.Topic,n=(e.body.partition,e.body.message);console.log(o),console.log(n);var t=new kafka.Client("192.168.4.182:2181"),s=new Producer(t);payloads=[{topic:o,messages:n}],s.on("ready",function(){s.send(payloads,function(e,a){e&&console.log(e)})}),s.on("error",function(e){console.log("inavlid")}),a.send(t)}),app.post("/MQTTConnectorSave_Device",function(o,n){try{if(!0===o.session.authenticated){var t=new cassandra.Client({contactPoints:["192.168.4.186:9042","192.168.4.166:9042"],queryOptions:{consistency:cassandra.types.consistencies.local_quorum},keyspace:"kafka_demo"});t.connect(function(e){e?console.log("Error in db Connection..............."):console.log("cassnadra db is  Connected....");var a="INSERT INTO kafka_demo.mqttconnector_info(deivceid, devicemodel, devicename, devicetype, host,password,port,topic,username) values('"+o.body.DeviceID+"','"+o.body.DeviceModel+"','"+o.body.DeviceName+"','"+o.body.DeviceType+"','"+o.body.Host+"','"+o.body.PassWord+"','"+o.body.Port+"','"+o.body.Topic+"','"+o.body.UserName+"')";console.log(a),t.execute(a,function(e,a){e?(console.log(e),n.send(!1)):n.send("Successfully Inserted")})})}else n.send({isauthenticated:!1})}catch(e){console.log("Error\tMQTTConnectorSave_Device"+e.message),n.send(e.message)}}),app.get("/MQTT_DeviceList",function(e,o){console.log("MQTT_DeviceList");try{var a=new cassandra.Client({contactPoints:["192.168.4.186:9042","192.168.4.166:9042"],queryOptions:{consistency:cassandra.types.consistencies.local_quorum},keyspace:"kafka_demo"});a.connect(function(e){e?console.log("Error in db Connection..............."):console.log("cassnadra db is  Connected....");a.execute("select * from kafka_demo.mqttconnector_info",function(e,a){e?console.log(e):o.send(a)})})}catch(e){console.log("Error\tMQTT_DeviceList"+e.message),o.send(e.message)}}),app.get("/Topics_Mqtt",function(e,o){try{var a=new cassandra.Client({contactPoints:["192.168.4.186:9042","192.168.4.166:9042"],queryOptions:{consistency:cassandra.types.consistencies.local_quorum},keyspace:"kafka_demo"});a.connect(function(e){e?console.log("Error in db Connection..............."):console.log("cassnadra db is  Connected....");a.execute("select topic from kafka_demo.mqttconnector_info",function(e,a){e?console.log(e):o.send(a)})})}catch(e){console.log("Error\tMQTT_DeviceList"+e.message),o.send(e.message)}}),app.post("/SaveWSDLfile",function(e,t){try{if(!0===e.session.authenticated){new Object;console.log(e.body.formData);var a=__dirname+"/public/Analytics/UploadWSDLFiles/"+e.body.formData;fs.writeFile(a,e.body.formData,function(e,a){if(e)return console.log(e)});var n=new formidable.IncomingForm;n.multiples=!0,n.uploadDir=path.join(__dirname,"/public/Analytics/UploadWSDLFiles"),path1=n.uploadDir,n.parse(e,function(e,a,o){path1=path.join(path1,o.file.name),console.log("path1"+path1),fs.rename(o.file.path,path.join(n.uploadDir,o.file.name),function(e){if(e)t.send(e.message);else{var n=[];WSDL.open(path1,{},function(e,a){console.log(a);a.definitions;n.push(a.definitions);var o=CircularJSON.stringify(n);t.json(o)})}})})}else t.send({isauthenticated:!1})}catch(e){console.log("Error:\t"+Menu_Creation+"\t"+e)}}),app.post("/WSDL_MethodSelect",function(i,c){try{var l=[],d=[];soap.createClient(path1,{},function(e,a){var o=i.body.parents,n=i.body.seletednode,t=a.describe();console.log(t),console.log(o+"_"+n);var s=t[""+o[0]];for(var r in console.log(s),s)d.push(r),l.push(s[r][""+n].input.body);c.send({description:l,Service_Name_resp:o[0],MethodName:n,MyWSDL_Port:d})})}catch(e){console.log("Error\tWSDL_MethodSelect"+e)}}),app.post("/Response_SOAP",function(o,t){o.body.MyTxt_Result,o.body.ReqName;var n=o.body.ReqName2[0];console.log("requestArgs\t"+n);soap.createClient(path1,{},function(e,a){try{(0,a[""+o.body.serviceName][""+o.body.PortName][""+o.body.methodname])(n,function(e,a,o,n){e?t.send(!1):t.send(a)})}catch(e){console.log("Error\t"+e.message),t.send(e.message)}})}),app.post("/WSDL_MethodSelectFromUrl",function(i,c){try{var l=[],d=[];soap.createClient(url,{},function(e,a){var o=i.body.parents,n=i.body.seletednode,t=a.describe();console.log(o+"_"+n);var s=t[""+o[0]];for(var r in s)d.push(r),l.push(s[r][""+n].input.body);c.send({description:l,Service_Name_resp:o[0],MethodName:n,MyWSDL_Port:d})})}catch(e){console.log("Error\tWSDL_MethodSelect"+e)}}),app.post("/GetResponseform_WSDLUrl",function(e,n){try{if(!0===e.session.authenticated){url=e.body.myurl;var t=[];WSDL.open(url,{},function(e,a){if(console.log(a),e)n.send(!1);else{a.definitions;t.push(a.definitions);var o=CircularJSON.stringify(t);n.json(o)}})}else n.send({isauthenticated:!1})}catch(e){console.log("Error\t"+e.message),n.send(e.message)}}),app.post("/Response_SOAP_Url",function(o,t){if(!0===o.session.authenticated){o.body.MyTxt_Result,o.body.ReqName;var n=o.body.ReqName2[0],e={};console.log("requestArgs"+n),"frompath"==o.body.Path_Url_Speration?soap.createClient(path1,e,function(e,a){try{(0,a[""+o.body.serviceName][""+o.body.PortName][""+o.body.methodname])(n,function(e,a,o,n){e?t.send(!1):t.send(a)})}catch(e){console.log("Error\t"+e.message),t.send(!1)}}):soap.createClient(url,e,function(e,a){try{(0,a[""+o.body.serviceName][""+o.body.PortName][""+o.body.methodname])(n,function(e,a,o,n){e?t.send(!1):t.send(a)})}catch(e){console.log("Error\t"+e.message),t.send(e.message)}})}else t.send({isauthenticated:!1})}),socket.on("request",function(e){var t=e.accept(null,e.origin);t.on("message",function(e){var a=e.utf8Data.split("_");if("Kafka"==a[0]){var o=a[1],n=new kafka.Client("192.168.4.182:2181");new Consumer(n,[{topic:o,partition:0}],{autoCommit:!1}).on("message",function(e){console.log(e.value),t.sendUTF(e.value)})}else{o=e.utf8Data,n=mqtt.connect("mqtt://192.168.4.112",{username:"mac",password:"admin"});console.log("client.connected"+n.connected),n.on("connect",function(){n.subscribe(o)}),n.on("error",function(){console.log("ERROR"),n.end()}),n.on("offline",function(){console.log("offline"),t.sendUTF("offline")}),n.on("message",function(e,a){e===o&&t.sendUTF(a.toString())})}t.on("close",function(e){console.log("connection closed")})})}),app.get("/SqlConnection/GetSqlConnList",function(e,o){try{if(!0===e.session.authenticated){postgresqlDBManager.PSQL_getdata('Select connectionname as "ConnectionName",id as "Id" from "Analytics_M_Connections" where username=$1 and connectiontype=$2',[e.session.myemail,"Sql Connection"],function(e,a){e?(console.log("Error Getting Data in GetSqlConnList"),o.send({error:e.message})):o.json(a)})}else o.send({isauthenticated:!1})}catch(e){console.log("Exception in GetSqlConnList: "+e.message),o.send({error:"Exception in GetSqlConnList: "+e.message})}}),app.post("/SqlConnection/GetDatabaseList",function(e,a){try{if(!0===e.session.authenticated){var o=JSON.parse(e.body.Conndata),n="";n="Sql"==o[0].sql_Type?{user:o[0].User,password:o[0].Password,server:o[0].ServerName,port:o[0].PortNumber,options:{encrypt:!0}}:{server:o[0].ServerName,port:o[0].PortNumber,options:{encrypt:!0}},sql.close(),sql.connect(n).then(function(){(new sql.Request).query("Select name from sys.databases").then(function(e){a.send({Result:e.recordset})}).catch(function(e){console.log("Error Getting Data in GetDatabaseList"),a.send({error:e.message})})}).catch(function(e){console.log("Error Connecting to SQL in GetDatabaseList"),a.send({error:e.message})})}else a.send({isauthenticated:!1})}catch(e){console.log("Exception in GetDatabaseList: "+e.message),a.send({error:"Exception in GetDatabaseList: "+e.message})}}),app.post("/SqlConnection/SaveSql_Connection",function(n,t){try{if(!0===n.session.authenticated)if("save"==n.body[0].operation){var s='Select Count(*) from "Analytics_M_Connections" where connectionname=$1 and connectiontype=$2';postgresqlDBManager.PSQL_getdata(s,[n.body[0].ConnectionName,"Sql Connection"],function(e,a){if(e)console.log("Error Getting Data in SaveSql_Connection"),t.send({error:e.message});else if(0<a[0].count)t.send({Exists:"Duplicate"});else{s='Insert into public."Analytics_M_Connections"(connectas, connectionname, connectiontype, databasename, password, portnumber,',s+='servername, service, sqltype, userid, username, "Role")values($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)';var o=[n.body[0].Connectas,n.body[0].ConnectionName,n.body[0].ConnectionType,n.body[0].databasename,n.body[0].Password,n.body[0].PortNumber,n.body[0].ServerName,"",n.body[0].sqlType,n.body[0].Userid,n.session.myemail,n.session.RoleId];postgresqlDBManager.PSQL_InsertData(s,o,function(e,a){e?(console.log("Error Inserting Data in SaveSql_Connection"),t.send({error:e.message})):(s='Select connectionname as "ConnectionName",id as "Id" from "Analytics_M_Connections" where username=$1 and connectiontype=$2',postgresqlDBManager.PSQL_getdata(s,[n.session.myemail,"Sql Connection"],function(e,a){e?(console.log("Error Getting Data in SaveSql_Connection"),t.send({error:e.message})):t.json(a)}))})}})}else{s='Select Count(*) from "Analytics_M_Connections" where connectionname=$1 and connectiontype=$2 and id!=$3';postgresqlDBManager.PSQL_getdata(s,[n.body[0].ConnectionName,"Sql Connection",n.body[0].operation],function(e,a){var o;e?(console.log("Error Getting Data in SaveSql_Connection"),t.send({error:e.message})):0<a[0].count?t.send({Exists:"Duplicate"}):(s='Update public."Analytics_M_Connections" Set connectas=$1, connectionname=$2, connectiontype=$3, databasename=$4, password=$5, portnumber=$6, servername=$7, service=$8, sqltype=$9, userid=$10, username=$11, "Role"=$12 where id=$13;',o="Sql"==n.body[0].sqlType?[n.body[0].Connectas,n.body[0].ConnectionName,n.body[0].ConnectionType,n.body[0].databasename,n.body[0].Password,n.body[0].PortNumber,n.body[0].ServerName,"",n.body[0].sqlType,n.body[0].Userid,n.session.myemail,n.session.RoleId,n.body[0].operation]:[n.body[0].Connectas,n.body[0].ConnectionName,n.body[0].ConnectionType,n.body[0].databasename,"",n.body[0].PortNumber,n.body[0].ServerName,"",n.body[0].sqlType,"",n.session.myemail,n.session.RoleId,n.body[0].operation],postgresqlDBManager.PSQL_InsertData(s,o,function(e,a){e?(console.log("Error Updating Data in SaveSql_Connection"),t.send({error:e.message})):(s='Select connectionname as "ConnectionName",id as "Id" from "Analytics_M_Connections" where username=$1 and connectiontype=$2',postgresqlDBManager.PSQL_getdata(s,[n.session.myemail,"Sql Connection"],function(e,a){e?(console.log("Error Getting Data in SaveSql_Connection"),t.send({error:e.message})):t.json(a)}))}))})}else t.send({isauthenticated:!1})}catch(e){console.log("Exception in SaveSql_Connection: "+e.message),t.send({error:"Exception in SaveSql_Connection: "+e.message})}}),app.post("/SqlConnection/EditSql_Connection",function(e,o){try{if(!0===e.session.authenticated){postgresqlDBManager.PSQL_getdata('Select * from "Analytics_M_Connections" where id=$1',[e.body.Edit_Conn],function(e,a){e?(console.log("Error Getting Data in EditSql_Connection"),o.send({error:e.message})):o.send({Result:a})})}else o.send({isauthenticated:!1})}catch(e){console.log("Exception in EditSql_Connection: "+e.message),o.send({error:"Exception in EditSql_Connection: "+e.message})}}),app.post("/SqlConnection/RemoveSql_Connection",function(e,o){try{if(!0===e.session.authenticated){postgresqlDBManager.PSQL_InsertData('Delete from "Analytics_M_Connections" where id=$1',[e.body.ConnId],function(e,a){e?(console.log("Error Deleting Connection in RemoveSql_Connection"),o.send({error:e.message})):o.send("Deleted")})}else o.send({isauthenticated:!1})}catch(e){console.log("Exception in RemoveSql_Connection: "+e.message),o.send({error:"Exception in RemoveSql_Connection: "+e.message})}}),app.post("/SqlConnection/SPobjCreate_Query",function(e,n){try{if(!0===e.session.authenticated){var t=JSON.parse(e.body.SPobjCreate_Query);postgresqlDBManager.PSQL_getdata('Select * from "Analytics_M_Connections" where id=$1',[t[0].ConnIdhidespedit],function(e,a){if(e)console.log("Error Getting Data from Connections in SPobjCreate_Query"),n.send({error:e.message});else{a[0].databasename;var o="";o="Sql"==a[0].sqltype?{user:a[0].userid,password:a[0].password,server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}}:{server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}},sql.close(),sql.connect(o).then(function(){(new sql.Request).query(t[0].SPCreateQuery).then(function(e){n.status(200).send({Result:"Stored Procedure has been created Successfully!!"})}).catch(function(e){console.log("Error Creating Stored Procedure in SPobjCreate_Query"),n.send({error:e.message})})}).catch(function(e){console.log("Error Connecting to SQL in SPobjCreate_Query"),n.send({error:e.message})})}})}else n.send({isauthenticated:!1})}catch(e){console.log("Exception in SPobjCreate_Query: "+e.message),n.send({error:"Exception in SPobjCreate_Query: "+e.message})}}),app.post("/SqlConnection/GetSqlAvailSP",function(e,o){try{if(!0===e.session.authenticated){postgresqlDBManager.PSQL_getdata('Select "Selected_sp" as "name", "Checked" as "_checked", "Id" as id from "DataConnectors_M_Sqlconn" where "ConnectionId"=$1',[e.body.selectedConnId],function(e,a){e?(console.log("Error Getting Data in GetSqlAvailSP"),o.send({error:e.message})):o.send({Result:a})})}else o.send({isauthenticated:!1})}catch(e){console.log("Exception in GetSqlAvailSP: "+e.message),o.send({error:"Exception in GetSqlAvailSP: "+e.message})}}),app.post("/SqlConnection/GetSqlSPList",function(e,n){try{if(!0===e.session.authenticated){postgresqlDBManager.PSQL_getdata('Select * from "Analytics_M_Connections" where id=$1',[e.body.selectedConnId],function(e,a){if(e)console.log("Error Getting Data in GetSqlSPList"),n.send({error:e.message});else{var o="";o="Sql"==a[0].sqltype?{user:a[0].userid,password:a[0].password,server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}}:{server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}},sql.close(),sql.connect(o).then(function(){(new sql.Request).query("Select SPECIFIC_NAME as 'name',(Select Convert(Bit, 'false')) as '_checked' from "+a[0].databasename+".information_schema.routines").then(function(e){n.send(e.recordset)}).catch(function(e){console.log("Error Getting Stored Procedures in GetSqlSPList"),n.send({error:e.message})})}).catch(function(e){console.log("Error Connecting to SQL in GetSqlSPList"),n.send({error:e.message})})}})}else n.send({isauthenticated:!1})}catch(e){console.log("Exception in GetSqlAvailSP: "+e.message),n.send({error:"Exception in GetSqlAvailSP: "+e.message})}}),app.post("/SqlConnection/SaveSql_SPConnection",function(o,n){try{if(!0===o.session.authenticated){var t='Insert into "DataConnectors_M_Sqlconn"("ConnectionId", "Selected_sp", "Checked")values($1,$2,$3)';postgresqlDBManager.PSQL_InsertData(t,[o.body[0].ConnectionId,o.body[0].Selected_SP,o.body[0].checked],function(e,a){e?(console.log("Error Inserting Data in SaveSql_SPConnection"),n.send({error:e.message})):(t='Select "Selected_sp" as "name", "Checked" as "_checked", "Id" as id from "DataConnectors_M_Sqlconn" where "ConnectionId"=$1',postgresqlDBManager.PSQL_getdata(t,[o.body[0].ConnectionId],function(e,a){e?(console.log("Error Getting Data in SaveSql_SPConnection"),n.send({error:e.message})):n.send({Result:a})}))})}else n.send({isauthenticated:!1})}catch(e){console.log("Exception in SaveSql_SPConnection: "+e.message),n.send({error:"Exception in SaveSql_SPConnection: "+e.message})}}),app.post("/SqlConnection/RemoveSql_SPConnection",function(e,o){try{if(!0===e.session.authenticated){var n=JSON.parse(e.body.Remove_ConnSPdata),t='Delete from "DataConnectors_M_Sqlconn" where "ConnectionId"=$1 and "Selected_sp"=$2';postgresqlDBManager.PSQL_InsertData(t,[n[0].ConnIdhide,n[0].SelectedSPS],function(e,a){e?(console.log("Error Deleting Data in RemoveSql_SPConnection"),o.send({error:e.message})):(t='Select "Selected_sp" as "name", "Checked" as "_checked", "Id" as id from "DataConnectors_M_Sqlconn" where "ConnectionId"=$1',postgresqlDBManager.PSQL_getdata(t,[n[0].ConnIdhide],function(e,a){e?(console.log("Error Getting Data in RemoveSql_SPConnection"),o.send({error:e.message})):o.send({Result:a})}))})}else o.send({isauthenticated:!1})}catch(e){console.log("Exception in RemoveSql_SPConnection: "+e.message),o.send({error:"Exception in RemoveSql_SPConnection: "+e.message})}}),app.post("/SqlConnection/GET_SPdtails",function(s,r){try{if(!0===s.session.authenticated){var e=JSON.parse(s.body.GET_SPdtail),i=e[0].StorePDname,c=e[0].SelcSPId,l='Select * from "Analytics_M_Connections" where id=$1';postgresqlDBManager.PSQL_getdata(l,[c],function(e,a){if(e)console.log("Error Getting Data from Connections in GET_SPdtails"),r.send({error:e.message});else{var o=a[0].databasename,t="",n=a[0].sqltype;t="Sql"==n?{user:a[0].userid,password:a[0].password,server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}}:{server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}},l='Select "ConnectionId", "Selspname", "SelParamname" as selparamname, "UserName", "Connname", "DataSource", "DataType", "Id", "ParamDefault" as paramdefault from "DataConnectors_M_Paramsconfig"',l+=' where "ConnectionId"=$1 and "Selspname"=$2 and "UserName"=$3',postgresqlDBManager.PSQL_getdata(l,[c,i,s.session.myemail],function(a,n){a?(console.log("Error Getting Data in GET_SPdtails"),r.send({error:a.message})):0<n.length?(sql.close(),sql.connect(t).then(function(){var a=new sql.Request,o=function(e){e<n.length&&(a.input(n[e].selparamname.replace("@",""),n[e].paramdefault),e==n.length-1&&a.execute(i,function(e,a,o){e?(console.log("Error Getting Data in GET_SPdtails"),r.send({error:e.message})):r.send({ResponseData:a.recordset})}),o(e+1))};o(0)})):(sql.close(),sql.connect(t).then(function(){(new sql.Request).query("select PARAMETER_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH from information_schema.parameters where specific_name='"+i+"' and SPECIFIC_CATALOG='"+o+"'").then(function(e){a?(console.log("Error Getting Data in GET_SPdtails"),r.send({error:a.message})):0<e.recordset.length?r.send({ResponseData:"Show Param Configure"}):(sql.close(),sql.connect(t).then(function(){(new sql.Request).execute(i,function(e,a,o){e?(console.log("Error Executing Stored Procedure in GET_SPdtails"),r.send({error:e.message})):r.send({Result:a.recordset})})}))}).catch(function(e){console.log("Error Getting Data in GET_SPdtails"),r.send({error:e.message})})}).catch(function(e){console.log("Error Connecting to SQL in GET_SPdtails"),r.send({error:e.message})}))})}})}else r.send({isauthenticated:!1})}catch(e){console.log("Exception in GET_SPdtails: "+e.message),r.send({error:"Exception in GET_SPdtails: "+e.message})}}),app.post("/SqlConnection/Get_SPforEdit",function(e,n){try{if(!0===e.session.authenticated){var a=JSON.parse(e.body.GetSPforedit),t=a[0].Editspitem;postgresqlDBManager.PSQL_getdata('Select * from "Analytics_M_Connections" where id=$1',[a[0].ConnIdhidespedit],function(e,a){if(e)console.log("Error Getting Data from Connections in Get_SPforEdit"),n.send({error:e.message});else{a[0].databasename;var o="";o="Sql"==a[0].sqltype?{user:a[0].userid,password:a[0].password,server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}}:{server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}},sql.close(),sql.connect(o).then(function(){(new sql.Request).query("Select definition from sys.sql_modules where [object_id] = OBJECT_ID('"+t+"')",function(e,a){e?(console.log("Error Getting Stored Procedures in Get_SPforEdit"),n.send({error:e.message})):n.send({Result:a.recordset})})})}})}else n.send({isauthenticated:!1})}catch(e){console.log("Exception in Get_SPforEdit: "+e.message),n.send({error:"Exception in Get_SPforEdit: "+e.message})}}),app.post("/SqlConnection/SPobjEdit_Query",function(e,n){try{if(!0===e.session.authenticated){var t=JSON.parse(e.body.SPobjEdit_Query);postgresqlDBManager.PSQL_getdata('Select * from "Analytics_M_Connections" where id=$1',[t[0].ConnIdhidespedit],function(e,a){if(e)console.log("Error Getting Data from Connections in SPobjEdit_Query"),n.send({error:e.message});else{a[0].databasename;var o="";o="Sql"==a[0].sqltype?{user:a[0].userid,password:a[0].password,server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}}:{server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}},sql.close(),sql.connect(o).then(function(){(new sql.Request).query(t[0].SPEditQuery,function(e,a){e?(console.log("Error Updating Stored Procedure in SPobjEdit_Query"),n.send({error:e.message})):n.send({Result:"Stored Procedure Successfully Updated"})})})}})}else n.send({isauthenticated:!1})}catch(e){console.log("Exception in SPobjEdit_Query: "+e.message),n.send({error:"Exception in SPobjEdit_Query: "+e.message})}}),app.post("/CreateParameter/GetConnList",function(e,o){try{if(!0===e.session.authenticated){if("Sql Connection"==e.body.Get_Connlist){postgresqlDBManager.PSQL_getdata('Select connectionname as "ConnectionName",id as "Id" from "Analytics_M_Connections" where username=$1 and connectiontype=$2',[e.session.myemail,"Sql Connection"],function(e,a){e?(console.log("Error Getting Data in GetConnList"),o.send({error:e.message})):o.send({Result:a})})}}else o.send({isauthenticated:!1})}catch(e){console.log("Exception in GetConnList: "+e.message),o.send({error:"Exception in GetConnList: "+e.message})}}),app.post("/CreateParameter/GetAvailSP",function(e,r){try{if(!0===e.session.authenticated){var n=JSON.parse(e.body.SelectedConn),a=n[0].datasource,i=[];if("Sql Connection"==a){var c='Select * from "Analytics_M_Connections" where id=$1';postgresqlDBManager.PSQL_getdata(c,[n[0].Id],function(e,a){if(e)console.log("Error Getting Data in GetAvailSP"),r.send({error:e.message});else{var t=a[0].databasename,s="",o=a[0].sqltype;s="Sql"==o?{user:a[0].userid,password:a[0].password,server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}}:{server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}},c='Select "Selected_sp" as selected_sp from "DataConnectors_M_Sqlconn" where "ConnectionId"=$1',postgresqlDBManager.PSQL_getdata(c,[n[0].Id],function(e,o){if(e)console.log("Error Getting Data from DataConnectors_M_Sqlconn in GetAvailSP"),r.send({error:e.message});else if(0<o.length){var n=function(a){a<o.length&&(sql.close(),sql.connect(s).then(function(){(new sql.Request).query("Select PARAMETER_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH from information_schema.parameters where specific_name='"+o[a].selected_sp+"' and SPECIFIC_CATALOG='"+t+"'").then(function(e){0<e.recordset.length&&i.push({Selected_SP:o[a].selected_sp}),a==o.length-1&&r.status(200).send({ParamsList:i}),n(a+1)}).catch(function(e){console.log("Error Getting Parameters Data in GetAvailSP"),r.send({error:e.message})})}).catch(function(e){console.log("Error Connecting to SQL in GetAvailSP"),r.send({error:e.message})}))};n(0)}else r.status(200).json(i)})}})}}else r.send({isauthenticated:!1})}catch(e){console.log("Exception in GetAvailSP: "+e.message),r.send({error:"Exception in GetAvailSP: "+e.message})}}),app.post("/CreateParameter/GetAvailSPParams",function(s,r){try{if(!0===s.session.authenticated){var i=JSON.parse(s.body.SelectedSP);if("Sql Connection"==i[0].datasource){var c='Select * from "Analytics_M_Connections" where id=$1';postgresqlDBManager.PSQL_getdata(c,[i[0].Id],function(e,a){if(e)console.log("Error Getting Data in GetAvailSPParams"),r.send({error:e.message});else{var o=a[0].databasename,n="",t=a[0].sqltype;n="Sql"==t?{user:a[0].userid,password:a[0].password,server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}}:{server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}},c='Select * from "DataConnectors_M_Paramsconfig" where "ConnectionId"=$1 and "Selspname"=$2 and "UserName"=$3',postgresqlDBManager.PSQL_getdata(c,[i[0].Id,i[0].spname,s.session.myemail],function(e,a){e?(console.log("Error Getting Data from DataConnectors_M_Sqlconn in GetAvailSPParams"),r.send({error:e.message})):0<a.length?(c='Select "SelParamname" as "PARAMETER_NAME","DataType" as "DATA_TYPE","ParamDefault" as "Value" from "DataConnectors_M_Paramsconfig" where "ConnectionId"=$1 and "Selspname"=$2 and "UserName"=$3',postgresqlDBManager.PSQL_getdata(c,[i[0].Id,i[0].spname,s.session.myemail],function(e,a){e?(console.log("Error Getting Data from DataConnectors_M_Paramsconfig in GetAvailSPParams"),r.send({error:e.message})):r.send({ParamsList:a})})):(sql.close(),sql.connect(n).then(function(){(new sql.Request).query("Select PARAMETER_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH from information_schema.parameters where specific_name='"+i[0].spname+"' and SPECIFIC_CATALOG='"+o+"'").then(function(e){r.send({ParamsList:e.recordset})}).catch(function(e){console.log("Error Getting Data from information_schema in GetAvailSPParams"),r.send({error:e.message})})}).catch(function(e){console.log("Error Connecting to SQL in GetAvailSPParams"),r.send({error:e.message})}))})}})}}else r.send({isauthenticated:!1})}catch(e){console.log("Exception in GetAvailSPParams: "+e.message),r.send({error:"Exception in GetAvailSPParams: "+e.message})}}),app.post("/CreateParameter/Save_paramdefault",function(t,s){try{if(!0===t.session.authenticated){var e=JSON.parse(t.body.Save_paramobj),r=e[0].param_dsname,i=(e[0].param_data,e[0].param_connname),c=e[0].param_spname,l=e[0].param_connid,d=JSON.parse(e[0].param_data);d.length;"QueryBuilder"!=r&&(query='Select "ConnectionId" from "DataConnectors_M_Paramsconfig" where "ConnectionId"=$1 and "Selspname"=$2 and "UserName"=$3',postgresqlDBManager.PSQL_getdata(query,[l,c,t.session.myemail],function(e,a){if(e)console.log("Error Getting Data in Save_paramdefault"),s.send({error:e.message});else{var n=function(o){var e;o<d.length&&(0<a.length?(query='Update "DataConnectors_M_Paramsconfig" set "ParamDefault"=$1 where "ConnectionId"=$2 and "SelParamname"=$3 and "Selspname"=$4 and "UserName"=$5',e=[d[o].Value,l,d[o].PARAMETER_NAME,c,t.session.myemail]):(query='Insert into public."DataConnectors_M_Paramsconfig"("ConnectionId", "Connname", "DataSource", "DataType", "ParamDefault", "SelParamname", "Selspname", "UserName")values($1, $2, $3, $4, $5, $6, $7, $8)',e=[l,i,r,d[o].DATA_TYPE,d[o].Value,d[o].PARAMETER_NAME,c,t.session.myemail]),postgresqlDBManager.PSQL_InsertData(query,e,function(e,a){e?(console.log("Error Inserting/Updating Data in Save_paramdefault"),s.send({error:e.message})):(n(o+1),o==d.length-1&&s.send({Success:"Parameters Configured Successfully!!"}))}))};n(0)}}))}else s.send({isauthenticated:!1})}catch(e){console.log("Exception in Save_paramdefault: "+e.message),s.send({error:"Exception in Save_paramdefault: "+e.message})}}),app.post("/CreateParameter/GET_paramdata",function(e,n){try{if(!0===e.session.authenticated){var a=JSON.parse(e.body.Paramdata_obj),t=a[0].param_spname,s=(a[0].param_data,JSON.parse(a[0].param_data)),o=a[0].param_dsname,r=a[0].param_connid;if("Sql Connection"==o){postgresqlDBManager.PSQL_getdata('Select * from "Analytics_M_Connections" where id=$1',[r],function(e,a){if(e)console.log("Error Getting Data from Analytics_M_Connections in GET_paramdata"),n.send({error:e.message});else{a[0].databasename;var o="";o="Sql"==a[0].sqltype?{user:a[0].userid,password:a[0].password,server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}}:{server:a[0].servername,port:a[0].portnumber,database:a[0].databasename,options:{encrypt:!0}},sql.close(),sql.connect(o).then(function(){var a=new sql.Request,o=function(e){e<s.length&&(a.input(s[e].PARAMETER_NAME.replace("@",""),s[e].Value),e==s.length-1&&a.execute(t,function(e,a,o){e?(console.log("Error Executing Stored Procedure in GET_paramdata"),n.send({error:e.message})):(console.log(a.recordset),console.log(o),n.send({Result:a.recordset}))}),o(e+1))};o(0)})}})}}else n.send({isauthenticated:!1})}catch(e){console.log("Exception in GET_paramdata: "+e.message),n.send({error:"Exception in GET_paramdata: "+e.message})}}),app.post("/SaveDashboard",function(o,n){try{if(!0===o.session.authenticated){postgresqlDBManager.PSQL_InsertData('Insert into "Analytics_M_Dashboards"("DashboardId", "DashboardName", "Description", "RoleId", "Access", "CreatedBy", "CreatedDate")values($1, $2, $3, $4, $5, $6, current_timestamp)',[o.body.dashboardid,o.body.dashboardname,o.body.desc,o.session.RoleId,o.body.AccessedBy,o.session.myemail],function(e,a){e?(console.log("Error Inserting Data in SaveDashboard"),n.send({error:e.message})):fs.writeFile("./public/Analytics/BIDashboards/"+o.body.dashboardid+".json",o.body.dashboardconfig,function(e){e?(console.log("Error Getting Data from Dashboard JSON File in SaveDashboard"),n.send({error:e.message})):n.send({success:!0,dashboardid:o.body.dashboardid})})})}else n.send({isauthenticated:!1})}catch(e){console.log("Exception in SaveDashboard: "+e.message),n.send({error:"Exception in SaveDashboard: "+e.message})}}),app.post("/Home/GetDashboard",function(e,o){try{if(!0===e.session.authenticated){postgresqlDBManager.PSQL_getdata('Select "DashboardId" as "Dashboardid", "DashboardName" as "Dashboard_name", "Description", "RoleId", "Access", "CreatedBy", "CreatedDate" from "Analytics_M_Dashboards"',null,function(e,a){e?(console.log("Error Getting Data in GetDashboard"),o.send({error:e.message})):o.status(200).json({Result:a})})}else o.send({isauthenticated:!1})}catch(e){console.log("Exception in GetDashboard: "+e.message),o.send({error:"Exception in GetDashboard: "+e.message})}}),app.post("/home/getdashboardbyid",function(n,t){try{var e="SELECT dashboardid,dashboard_name,description,UserId,access FROM Dashboards where dashboardid='"+n.body.dashboardid+"'";analytics_client.execute(e,queryOptions,function(e,o){e?t.send({error:e.message}):fs.readFile("public/Analytics/BIDashboards/"+n.body.dashboardid+".json","utf8",function(e,a){e?t.send({error:e.message}):t.status(200).json({Dashboardid:n.body.dashboardid,Dashboard_name:o.rows[0].dashboard_name,Description:o.rows[0].description,Access:o.rows[0].access,dashboardconfig:a})})})}catch(e){console.log(e.message)}})};